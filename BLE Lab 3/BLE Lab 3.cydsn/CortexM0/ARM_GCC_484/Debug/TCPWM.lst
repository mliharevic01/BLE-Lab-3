ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_initVar
  18              		.bss
  19              		.type	TCPWM_initVar, %object
  20              		.size	TCPWM_initVar, 1
  21              	TCPWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_Init, %function
  29              	TCPWM_Init:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\TCPWM.c"
   1:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TCPWM.c **** * File Name: TCPWM.c
   3:.\Generated_Source\PSoC4/TCPWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/TCPWM.c **** *
   5:.\Generated_Source\PSoC4/TCPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/TCPWM.c **** *  This file provides the source code to the API for the TCPWM
   7:.\Generated_Source\PSoC4/TCPWM.c **** *  component
   8:.\Generated_Source\PSoC4/TCPWM.c **** *
   9:.\Generated_Source\PSoC4/TCPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  11:.\Generated_Source\PSoC4/TCPWM.c **** *
  12:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TCPWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TCPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TCPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TCPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TCPWM.c **** 
  19:.\Generated_Source\PSoC4/TCPWM.c **** #include "TCPWM.h"
  20:.\Generated_Source\PSoC4/TCPWM.c **** 
  21:.\Generated_Source\PSoC4/TCPWM.c **** uint8 TCPWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/TCPWM.c **** 
  23:.\Generated_Source\PSoC4/TCPWM.c **** 
  24:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Init
  26:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 2


  27:.\Generated_Source\PSoC4/TCPWM.c **** *
  28:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/TCPWM.c **** *  Initialize/Restore default TCPWM configuration.
  30:.\Generated_Source\PSoC4/TCPWM.c **** *
  31:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  33:.\Generated_Source\PSoC4/TCPWM.c **** *
  34:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
  35:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  36:.\Generated_Source\PSoC4/TCPWM.c **** *
  37:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Init(void)
  39:.\Generated_Source\PSoC4/TCPWM.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/TCPWM.c **** 
  41:.\Generated_Source\PSoC4/TCPWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__QUAD == TCPWM_CONFIG)
  43:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG = TCPWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/TCPWM.c ****         
  45:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  = TCPWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/TCPWM.c **** 
  48:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/TCPWM.c ****         
  51:.\Generated_Source\PSoC4/TCPWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetCounterMode(TCPWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WritePeriod(TCPWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WriteCounter(TCPWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__QUAD == TCPWM_CONFIG) */
  56:.\Generated_Source\PSoC4/TCPWM.c **** 
  57:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
  58:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG = TCPWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/TCPWM.c ****         
  60:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  = TCPWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/TCPWM.c ****     
  63:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/TCPWM.c ****         
  66:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WritePeriod(TCPWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/TCPWM.c **** 
  69:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__COMPARE == TCPWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCompare(TCPWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/TCPWM.c **** 
  72:.\Generated_Source\PSoC4/TCPWM.c ****             #if (1u == TCPWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCompareBuf(TCPWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* (1u == TCPWM_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 3


  76:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__COMPARE == TCPWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/TCPWM.c **** 
  78:.\Generated_Source\PSoC4/TCPWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM_CY_TCPWM_V2 && TCPWM_TIMER_UPDOWN_CNT_USED && !TCPWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/TCPWM.c ****         #elif(TCPWM__COUNT_DOWN == TCPWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(TCPWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/TCPWM.c ****         #else
  84:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/TCPWM.c ****         #endif /* (TCPWM_CY_TCPWM_V2 && TCPWM_TIMER_UPDOWN_CNT_USED && !TCPWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__TIMER == TCPWM_CONFIG) */
  87:.\Generated_Source\PSoC4/TCPWM.c **** 
  88:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
  89:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG = TCPWM_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/TCPWM.c **** 
  91:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_PR == TCPWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |= TCPWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(TCPWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/TCPWM.c ****         #else
  95:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |= TCPWM_CTRL_PWM_ALIGN | TCPWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/TCPWM.c ****             
  97:.\Generated_Source\PSoC4/TCPWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM_CY_TCPWM_V2 && TCPWM_PWM_UPDOWN_CNT_USED && !TCPWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/TCPWM.c ****             #elif (TCPWM__RIGHT == TCPWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCounter(TCPWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/TCPWM.c ****             #else 
 103:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* (TCPWM_CY_TCPWM_V2 && TCPWM_PWM_UPDOWN_CNT_USED && !TCPWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_PR == TCPWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/TCPWM.c **** 
 107:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_DT == TCPWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |= TCPWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_DT == TCPWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/TCPWM.c **** 
 111:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM == TCPWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |= TCPWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM == TCPWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/TCPWM.c **** 
 115:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  = TCPWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/TCPWM.c ****     
 118:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/TCPWM.c **** 
 121:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_PR == TCPWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/TCPWM.c ****                     (TCPWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/TCPWM.c ****                     TCPWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/TCPWM.c ****                     TCPWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/TCPWM.c ****         #else
 128:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__LEFT == TCPWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_LEFT == TCPWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/TCPWM.c **** 
 132:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__RIGHT == TCPWM_PWM_ALIGN)
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 4


 133:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_RIGHT == TCPWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/TCPWM.c **** 
 136:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__CENTER == TCPWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_CENTER == TCPWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/TCPWM.c **** 
 140:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__ASYMMETRIC == TCPWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* (TCPWM__ASYMMETRIC == TCPWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_PR == TCPWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/TCPWM.c **** 
 145:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WritePeriod(TCPWM_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WriteCompare(TCPWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/TCPWM.c **** 
 149:.\Generated_Source\PSoC4/TCPWM.c ****         #if (1u == TCPWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCompareBuf(TCPWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (1u == TCPWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/TCPWM.c **** 
 154:.\Generated_Source\PSoC4/TCPWM.c ****         #if (1u == TCPWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WritePeriodBuf(TCPWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (1u == TCPWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 159:.\Generated_Source\PSoC4/TCPWM.c ****     
 160:.\Generated_Source\PSoC4/TCPWM.c **** }
  40              		.loc 1 160 0
  41 0004 BD46     		mov	sp, r7
  42              		@ sp needed
  43 0006 80BD     		pop	{r7, pc}
  44              		.cfi_endproc
  45              	.LFE2:
  46              		.size	TCPWM_Init, .-TCPWM_Init
  47              		.section	.text.TCPWM_Enable,"ax",%progbits
  48              		.align	2
  49              		.global	TCPWM_Enable
  50              		.code	16
  51              		.thumb_func
  52              		.type	TCPWM_Enable, %function
  53              	TCPWM_Enable:
  54              	.LFB3:
 161:.\Generated_Source\PSoC4/TCPWM.c **** 
 162:.\Generated_Source\PSoC4/TCPWM.c **** 
 163:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Enable
 165:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/TCPWM.c **** *
 167:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/TCPWM.c **** *  Enables the TCPWM.
 169:.\Generated_Source\PSoC4/TCPWM.c **** *
 170:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 172:.\Generated_Source\PSoC4/TCPWM.c **** *
 173:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 174:.\Generated_Source\PSoC4/TCPWM.c **** *  None
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 5


 175:.\Generated_Source\PSoC4/TCPWM.c **** *
 176:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Enable(void)
 178:.\Generated_Source\PSoC4/TCPWM.c **** {
  55              		.loc 1 178 0
  56              		.cfi_startproc
  57 0000 90B5     		push	{r4, r7, lr}
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 83B0     		sub	sp, sp, #12
  63              		.cfi_def_cfa_offset 24
  64 0004 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/TCPWM.c **** 
 181:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  66              		.loc 1 181 0
  67 0006 FC1D     		add	r4, r7, #7
  68 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  69 000c 031C     		mov	r3, r0
  70 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_BLOCK_CONTROL_REG |= TCPWM_MASK;
  71              		.loc 1 182 0
  72 0010 064B     		ldr	r3, .L3
  73 0012 064A     		ldr	r2, .L3
  74 0014 1268     		ldr	r2, [r2]
  75 0016 0121     		mov	r1, #1
  76 0018 0A43     		orr	r2, r1
  77 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
  78              		.loc 1 183 0
  79 001c FB1D     		add	r3, r7, #7
  80 001e 1B78     		ldrb	r3, [r3]
  81 0020 181C     		mov	r0, r3
  82 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/TCPWM.c **** 
 185:.\Generated_Source\PSoC4/TCPWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
 187:.\Generated_Source\PSoC4/TCPWM.c ****         #if (0u == TCPWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TriggerCommand(TCPWM_MASK, TCPWM_CMD_START);
 189:.\Generated_Source\PSoC4/TCPWM.c ****         #endif /* (0u == TCPWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 191:.\Generated_Source\PSoC4/TCPWM.c **** 
 192:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
 193:.\Generated_Source\PSoC4/TCPWM.c ****         #if (0u == TCPWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TriggerCommand(TCPWM_MASK, TCPWM_CMD_START);
 195:.\Generated_Source\PSoC4/TCPWM.c ****         #endif /* (0u == TCPWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM__TIMER == TCPWM_CONFIG) */
 197:.\Generated_Source\PSoC4/TCPWM.c **** }
  83              		.loc 1 197 0
  84 0026 BD46     		mov	sp, r7
  85 0028 03B0     		add	sp, sp, #12
  86              		@ sp needed
  87 002a 90BD     		pop	{r4, r7, pc}
  88              	.L4:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 6


  89              		.align	2
  90              	.L3:
  91 002c 00002040 		.word	1075838976
  92              		.cfi_endproc
  93              	.LFE3:
  94              		.size	TCPWM_Enable, .-TCPWM_Enable
  95              		.section	.text.TCPWM_Start,"ax",%progbits
  96              		.align	2
  97              		.global	TCPWM_Start
  98              		.code	16
  99              		.thumb_func
 100              		.type	TCPWM_Start, %function
 101              	TCPWM_Start:
 102              	.LFB4:
 198:.\Generated_Source\PSoC4/TCPWM.c **** 
 199:.\Generated_Source\PSoC4/TCPWM.c **** 
 200:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Start
 202:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/TCPWM.c **** *
 204:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/TCPWM.c **** *  Initializes the TCPWM with default customizer
 206:.\Generated_Source\PSoC4/TCPWM.c **** *  values when called the first time and enables the TCPWM.
 207:.\Generated_Source\PSoC4/TCPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/TCPWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/TCPWM.c **** *
 210:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 212:.\Generated_Source\PSoC4/TCPWM.c **** *
 213:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 214:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 215:.\Generated_Source\PSoC4/TCPWM.c **** *
 216:.\Generated_Source\PSoC4/TCPWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/TCPWM.c **** *  TCPWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/TCPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/TCPWM.c **** *  to 1 the first time TCPWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/TCPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/TCPWM.c **** *  calls to the TCPWM_Start() routine.
 222:.\Generated_Source\PSoC4/TCPWM.c **** *
 223:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Start(void)
 225:.\Generated_Source\PSoC4/TCPWM.c **** {
 103              		.loc 1 225 0
 104              		.cfi_startproc
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/TCPWM.c ****     if (0u == TCPWM_initVar)
 111              		.loc 1 226 0
 112 0004 064B     		ldr	r3, .L7
 113 0006 1B78     		ldrb	r3, [r3]
 114 0008 002B     		cmp	r3, #0
 115 000a 04D1     		bne	.L6
 227:.\Generated_Source\PSoC4/TCPWM.c ****     {
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 7


 228:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_Init();
 116              		.loc 1 228 0
 117 000c FFF7FEFF 		bl	TCPWM_Init
 229:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_initVar = 1u;
 118              		.loc 1 229 0
 119 0010 034B     		ldr	r3, .L7
 120 0012 0122     		mov	r2, #1
 121 0014 1A70     		strb	r2, [r3]
 122              	.L6:
 230:.\Generated_Source\PSoC4/TCPWM.c ****     }
 231:.\Generated_Source\PSoC4/TCPWM.c **** 
 232:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_Enable();
 123              		.loc 1 232 0
 124 0016 FFF7FEFF 		bl	TCPWM_Enable
 233:.\Generated_Source\PSoC4/TCPWM.c **** }
 125              		.loc 1 233 0
 126 001a BD46     		mov	sp, r7
 127              		@ sp needed
 128 001c 80BD     		pop	{r7, pc}
 129              	.L8:
 130 001e C046     		.align	2
 131              	.L7:
 132 0020 00000000 		.word	TCPWM_initVar
 133              		.cfi_endproc
 134              	.LFE4:
 135              		.size	TCPWM_Start, .-TCPWM_Start
 136              		.section	.text.TCPWM_Stop,"ax",%progbits
 137              		.align	2
 138              		.global	TCPWM_Stop
 139              		.code	16
 140              		.thumb_func
 141              		.type	TCPWM_Stop, %function
 142              	TCPWM_Stop:
 143              	.LFB5:
 234:.\Generated_Source\PSoC4/TCPWM.c **** 
 235:.\Generated_Source\PSoC4/TCPWM.c **** 
 236:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Stop
 238:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/TCPWM.c **** *
 240:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/TCPWM.c **** *  Disables the TCPWM.
 242:.\Generated_Source\PSoC4/TCPWM.c **** *
 243:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 245:.\Generated_Source\PSoC4/TCPWM.c **** *
 246:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 247:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 248:.\Generated_Source\PSoC4/TCPWM.c **** *
 249:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Stop(void)
 251:.\Generated_Source\PSoC4/TCPWM.c **** {
 144              		.loc 1 251 0
 145              		.cfi_startproc
 146 0000 90B5     		push	{r4, r7, lr}
 147              		.cfi_def_cfa_offset 12
 148              		.cfi_offset 4, -12
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 8


 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              		.cfi_def_cfa_offset 24
 153 0004 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/TCPWM.c **** 
 254:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 155              		.loc 1 254 0
 156 0006 FC1D     		add	r4, r7, #7
 157 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 158 000c 031C     		mov	r3, r0
 159 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/TCPWM.c **** 
 256:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_BLOCK_CONTROL_REG &= (uint32)~TCPWM_MASK;
 160              		.loc 1 256 0
 161 0010 064B     		ldr	r3, .L10
 162 0012 064A     		ldr	r2, .L10
 163 0014 1268     		ldr	r2, [r2]
 164 0016 0121     		mov	r1, #1
 165 0018 8A43     		bic	r2, r1
 166 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/TCPWM.c **** 
 258:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 167              		.loc 1 258 0
 168 001c FB1D     		add	r3, r7, #7
 169 001e 1B78     		ldrb	r3, [r3]
 170 0020 181C     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/TCPWM.c **** }
 172              		.loc 1 259 0
 173 0026 BD46     		mov	sp, r7
 174 0028 03B0     		add	sp, sp, #12
 175              		@ sp needed
 176 002a 90BD     		pop	{r4, r7, pc}
 177              	.L11:
 178              		.align	2
 179              	.L10:
 180 002c 00002040 		.word	1075838976
 181              		.cfi_endproc
 182              	.LFE5:
 183              		.size	TCPWM_Stop, .-TCPWM_Stop
 184              		.section	.text.TCPWM_SetMode,"ax",%progbits
 185              		.align	2
 186              		.global	TCPWM_SetMode
 187              		.code	16
 188              		.thumb_func
 189              		.type	TCPWM_SetMode, %function
 190              	TCPWM_SetMode:
 191              	.LFB6:
 260:.\Generated_Source\PSoC4/TCPWM.c **** 
 261:.\Generated_Source\PSoC4/TCPWM.c **** 
 262:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetMode
 264:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 9


 266:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the operation mode of the TCPWM. This function is used when
 268:.\Generated_Source\PSoC4/TCPWM.c **** *  configured as a generic TCPWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/TCPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/TCPWM.c **** *
 271:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/TCPWM.c **** *  mode: Mode for the TCPWM to operate in
 273:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/TCPWM.c **** *   - TCPWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/TCPWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/TCPWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/TCPWM.c **** *
 283:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 284:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 285:.\Generated_Source\PSoC4/TCPWM.c **** *
 286:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/TCPWM.c **** {
 192              		.loc 1 288 0
 193              		.cfi_startproc
 194 0000 90B5     		push	{r4, r7, lr}
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 85B0     		sub	sp, sp, #20
 200              		.cfi_def_cfa_offset 32
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/TCPWM.c **** 
 291:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 291 0
 205 0008 3C1C     		mov	r4, r7
 206 000a 0F34     		add	r4, r4, #15
 207 000c FFF7FEFF 		bl	CyEnterCriticalSection
 208 0010 031C     		mov	r3, r0
 209 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/TCPWM.c **** 
 293:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_MODE_MASK;
 210              		.loc 1 293 0
 211 0014 0A4B     		ldr	r3, .L13
 212 0016 0A4A     		ldr	r2, .L13
 213 0018 1168     		ldr	r1, [r2]
 214 001a 0A4A     		ldr	r2, .L13+4
 215 001c 0A40     		and	r2, r1
 216 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= mode;
 217              		.loc 1 294 0
 218 0020 074B     		ldr	r3, .L13
 219 0022 074A     		ldr	r2, .L13
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 10


 220 0024 1168     		ldr	r1, [r2]
 221 0026 7A68     		ldr	r2, [r7, #4]
 222 0028 0A43     		orr	r2, r1
 223 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/TCPWM.c **** 
 296:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 224              		.loc 1 296 0
 225 002c 3B1C     		mov	r3, r7
 226 002e 0F33     		add	r3, r3, #15
 227 0030 1B78     		ldrb	r3, [r3]
 228 0032 181C     		mov	r0, r3
 229 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/TCPWM.c **** }
 230              		.loc 1 297 0
 231 0038 BD46     		mov	sp, r7
 232 003a 05B0     		add	sp, sp, #20
 233              		@ sp needed
 234 003c 90BD     		pop	{r4, r7, pc}
 235              	.L14:
 236 003e C046     		.align	2
 237              	.L13:
 238 0040 00012040 		.word	1075839232
 239 0044 FFFFFFF8 		.word	-117440513
 240              		.cfi_endproc
 241              	.LFE6:
 242              		.size	TCPWM_SetMode, .-TCPWM_SetMode
 243              		.section	.text.TCPWM_SetQDMode,"ax",%progbits
 244              		.align	2
 245              		.global	TCPWM_SetQDMode
 246              		.code	16
 247              		.thumb_func
 248              		.type	TCPWM_SetQDMode, %function
 249              	TCPWM_SetQDMode:
 250              	.LFB7:
 298:.\Generated_Source\PSoC4/TCPWM.c **** 
 299:.\Generated_Source\PSoC4/TCPWM.c **** 
 300:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetQDMode
 302:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/TCPWM.c **** *
 304:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/TCPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/TCPWM.c **** *
 308:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/TCPWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/TCPWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/TCPWM.c **** *
 316:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 317:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 318:.\Generated_Source\PSoC4/TCPWM.c **** *
 319:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetQDMode(uint32 qdMode)
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 11


 321:.\Generated_Source\PSoC4/TCPWM.c **** {
 251              		.loc 1 321 0
 252              		.cfi_startproc
 253 0000 90B5     		push	{r4, r7, lr}
 254              		.cfi_def_cfa_offset 12
 255              		.cfi_offset 4, -12
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 85B0     		sub	sp, sp, #20
 259              		.cfi_def_cfa_offset 32
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/TCPWM.c **** 
 324:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 263              		.loc 1 324 0
 264 0008 3C1C     		mov	r4, r7
 265 000a 0F34     		add	r4, r4, #15
 266 000c FFF7FEFF 		bl	CyEnterCriticalSection
 267 0010 031C     		mov	r3, r0
 268 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/TCPWM.c **** 
 326:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_QUAD_MODE_MASK;
 269              		.loc 1 326 0
 270 0014 0A4B     		ldr	r3, .L16
 271 0016 0A4A     		ldr	r2, .L16
 272 0018 1168     		ldr	r1, [r2]
 273 001a 0A4A     		ldr	r2, .L16+4
 274 001c 0A40     		and	r2, r1
 275 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= qdMode;
 276              		.loc 1 327 0
 277 0020 074B     		ldr	r3, .L16
 278 0022 074A     		ldr	r2, .L16
 279 0024 1168     		ldr	r1, [r2]
 280 0026 7A68     		ldr	r2, [r7, #4]
 281 0028 0A43     		orr	r2, r1
 282 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/TCPWM.c **** 
 329:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 283              		.loc 1 329 0
 284 002c 3B1C     		mov	r3, r7
 285 002e 0F33     		add	r3, r3, #15
 286 0030 1B78     		ldrb	r3, [r3]
 287 0032 181C     		mov	r0, r3
 288 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/TCPWM.c **** }
 289              		.loc 1 330 0
 290 0038 BD46     		mov	sp, r7
 291 003a 05B0     		add	sp, sp, #20
 292              		@ sp needed
 293 003c 90BD     		pop	{r4, r7, pc}
 294              	.L17:
 295 003e C046     		.align	2
 296              	.L16:
 297 0040 00012040 		.word	1075839232
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 12


 298 0044 FFFF8FFF 		.word	-7340033
 299              		.cfi_endproc
 300              	.LFE7:
 301              		.size	TCPWM_SetQDMode, .-TCPWM_SetQDMode
 302              		.section	.text.TCPWM_SetPrescaler,"ax",%progbits
 303              		.align	2
 304              		.global	TCPWM_SetPrescaler
 305              		.code	16
 306              		.thumb_func
 307              		.type	TCPWM_SetPrescaler, %function
 308              	TCPWM_SetPrescaler:
 309              	.LFB8:
 331:.\Generated_Source\PSoC4/TCPWM.c **** 
 332:.\Generated_Source\PSoC4/TCPWM.c **** 
 333:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPrescaler
 335:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/TCPWM.c **** *
 337:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/TCPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/TCPWM.c **** *
 341:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/TCPWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/TCPWM.c **** *
 353:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 354:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 355:.\Generated_Source\PSoC4/TCPWM.c **** *
 356:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/TCPWM.c **** {
 310              		.loc 1 358 0
 311              		.cfi_startproc
 312 0000 90B5     		push	{r4, r7, lr}
 313              		.cfi_def_cfa_offset 12
 314              		.cfi_offset 4, -12
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 85B0     		sub	sp, sp, #20
 318              		.cfi_def_cfa_offset 32
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/TCPWM.c **** 
 361:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 361 0
 323 0008 3C1C     		mov	r4, r7
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 13


 324 000a 0F34     		add	r4, r4, #15
 325 000c FFF7FEFF 		bl	CyEnterCriticalSection
 326 0010 031C     		mov	r3, r0
 327 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/TCPWM.c **** 
 363:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PRESCALER_MASK;
 328              		.loc 1 363 0
 329 0014 0A4B     		ldr	r3, .L19
 330 0016 0A4A     		ldr	r2, .L19
 331 0018 1168     		ldr	r1, [r2]
 332 001a 0A4A     		ldr	r2, .L19+4
 333 001c 0A40     		and	r2, r1
 334 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= prescaler;
 335              		.loc 1 364 0
 336 0020 074B     		ldr	r3, .L19
 337 0022 074A     		ldr	r2, .L19
 338 0024 1168     		ldr	r1, [r2]
 339 0026 7A68     		ldr	r2, [r7, #4]
 340 0028 0A43     		orr	r2, r1
 341 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/TCPWM.c **** 
 366:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 342              		.loc 1 366 0
 343 002c 3B1C     		mov	r3, r7
 344 002e 0F33     		add	r3, r3, #15
 345 0030 1B78     		ldrb	r3, [r3]
 346 0032 181C     		mov	r0, r3
 347 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/TCPWM.c **** }
 348              		.loc 1 367 0
 349 0038 BD46     		mov	sp, r7
 350 003a 05B0     		add	sp, sp, #20
 351              		@ sp needed
 352 003c 90BD     		pop	{r4, r7, pc}
 353              	.L20:
 354 003e C046     		.align	2
 355              	.L19:
 356 0040 00012040 		.word	1075839232
 357 0044 FF00FFFF 		.word	-65281
 358              		.cfi_endproc
 359              	.LFE8:
 360              		.size	TCPWM_SetPrescaler, .-TCPWM_SetPrescaler
 361              		.section	.text.TCPWM_SetOneShot,"ax",%progbits
 362              		.align	2
 363              		.global	TCPWM_SetOneShot
 364              		.code	16
 365              		.thumb_func
 366              		.type	TCPWM_SetOneShot, %function
 367              	TCPWM_SetOneShot:
 368              	.LFB9:
 368:.\Generated_Source\PSoC4/TCPWM.c **** 
 369:.\Generated_Source\PSoC4/TCPWM.c **** 
 370:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetOneShot
 372:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 14


 374:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the TCPWM runs
 376:.\Generated_Source\PSoC4/TCPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/TCPWM.c **** *  TCPWM operates in the continuous mode.
 378:.\Generated_Source\PSoC4/TCPWM.c **** *
 379:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/TCPWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/TCPWM.c **** *
 385:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 386:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 387:.\Generated_Source\PSoC4/TCPWM.c **** *
 388:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/TCPWM.c **** {
 369              		.loc 1 390 0
 370              		.cfi_startproc
 371 0000 90B5     		push	{r4, r7, lr}
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 85B0     		sub	sp, sp, #20
 377              		.cfi_def_cfa_offset 32
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/TCPWM.c **** 
 393:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 381              		.loc 1 393 0
 382 0008 3C1C     		mov	r4, r7
 383 000a 0F34     		add	r4, r4, #15
 384 000c FFF7FEFF 		bl	CyEnterCriticalSection
 385 0010 031C     		mov	r3, r0
 386 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/TCPWM.c **** 
 395:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_ONESHOT_MASK;
 387              		.loc 1 395 0
 388 0014 0B4B     		ldr	r3, .L22
 389 0016 0B4A     		ldr	r2, .L22
 390 0018 1168     		ldr	r1, [r2]
 391 001a 0B4A     		ldr	r2, .L22+4
 392 001c 0A40     		and	r2, r1
 393 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1BIT_MASK) <<
 394              		.loc 1 396 0
 395 0020 084B     		ldr	r3, .L22
 396 0022 084A     		ldr	r2, .L22
 397 0024 1168     		ldr	r1, [r2]
 398 0026 7868     		ldr	r0, [r7, #4]
 399 0028 0122     		mov	r2, #1
 400 002a 0240     		and	r2, r0
 401 002c 9204     		lsl	r2, r2, #18
 402 002e 0A43     		orr	r2, r1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 15


 403 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/TCPWM.c ****                                                                TCPWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/TCPWM.c **** 
 399:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 404              		.loc 1 399 0
 405 0032 3B1C     		mov	r3, r7
 406 0034 0F33     		add	r3, r3, #15
 407 0036 1B78     		ldrb	r3, [r3]
 408 0038 181C     		mov	r0, r3
 409 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/TCPWM.c **** }
 410              		.loc 1 400 0
 411 003e BD46     		mov	sp, r7
 412 0040 05B0     		add	sp, sp, #20
 413              		@ sp needed
 414 0042 90BD     		pop	{r4, r7, pc}
 415              	.L23:
 416              		.align	2
 417              	.L22:
 418 0044 00012040 		.word	1075839232
 419 0048 FFFFFBFF 		.word	-262145
 420              		.cfi_endproc
 421              	.LFE9:
 422              		.size	TCPWM_SetOneShot, .-TCPWM_SetOneShot
 423              		.section	.text.TCPWM_SetPWMMode,"ax",%progbits
 424              		.align	2
 425              		.global	TCPWM_SetPWMMode
 426              		.code	16
 427              		.thumb_func
 428              		.type	TCPWM_SetPWMMode, %function
 429              	TCPWM_SetPWMMode:
 430              	.LFB10:
 401:.\Generated_Source\PSoC4/TCPWM.c **** 
 402:.\Generated_Source\PSoC4/TCPWM.c **** 
 403:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMMode
 405:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/TCPWM.c **** *
 407:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/TCPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/TCPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/TCPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/TCPWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/TCPWM.c **** *
 414:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/TCPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/TCPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 16


 426:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/TCPWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/TCPWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/TCPWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/TCPWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/TCPWM.c **** *
 439:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 440:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 441:.\Generated_Source\PSoC4/TCPWM.c **** *
 442:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/TCPWM.c **** {
 431              		.loc 1 444 0
 432              		.cfi_startproc
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 82B0     		sub	sp, sp, #8
 438              		.cfi_def_cfa_offset 16
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL2_REG = (modeMask & TCPWM_6BIT_MASK);
 442              		.loc 1 445 0
 443 0008 034B     		ldr	r3, .L25
 444 000a 7968     		ldr	r1, [r7, #4]
 445 000c 3F22     		mov	r2, #63
 446 000e 0A40     		and	r2, r1
 447 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/TCPWM.c **** }
 448              		.loc 1 446 0
 449 0012 BD46     		mov	sp, r7
 450 0014 02B0     		add	sp, sp, #8
 451              		@ sp needed
 452 0016 80BD     		pop	{r7, pc}
 453              	.L26:
 454              		.align	2
 455              	.L25:
 456 0018 28012040 		.word	1075839272
 457              		.cfi_endproc
 458              	.LFE10:
 459              		.size	TCPWM_SetPWMMode, .-TCPWM_SetPWMMode
 460              		.section	.text.TCPWM_SetPWMSyncKill,"ax",%progbits
 461              		.align	2
 462              		.global	TCPWM_SetPWMSyncKill
 463              		.code	16
 464              		.thumb_func
 465              		.type	TCPWM_SetPWMSyncKill, %function
 466              	TCPWM_SetPWMSyncKill:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 17


 467              	.LFB11:
 447:.\Generated_Source\PSoC4/TCPWM.c **** 
 448:.\Generated_Source\PSoC4/TCPWM.c **** 
 449:.\Generated_Source\PSoC4/TCPWM.c **** 
 450:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/TCPWM.c **** *
 454:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/TCPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/TCPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/TCPWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/TCPWM.c **** *
 460:.\Generated_Source\PSoC4/TCPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/TCPWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/TCPWM.c **** *
 463:.\Generated_Source\PSoC4/TCPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/TCPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/TCPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/TCPWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/TCPWM.c **** 
 468:.\Generated_Source\PSoC4/TCPWM.c **** *
 469:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/TCPWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/TCPWM.c **** *
 475:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 476:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 477:.\Generated_Source\PSoC4/TCPWM.c **** *
 478:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/TCPWM.c **** {
 468              		.loc 1 480 0
 469              		.cfi_startproc
 470 0000 90B5     		push	{r4, r7, lr}
 471              		.cfi_def_cfa_offset 12
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 85B0     		sub	sp, sp, #20
 476              		.cfi_def_cfa_offset 32
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/TCPWM.c **** 
 483:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 480              		.loc 1 483 0
 481 0008 3C1C     		mov	r4, r7
 482 000a 0F34     		add	r4, r4, #15
 483 000c FFF7FEFF 		bl	CyEnterCriticalSection
 484 0010 031C     		mov	r3, r0
 485 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/TCPWM.c **** 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 18


 485:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PWM_SYNC_KILL_MASK;
 486              		.loc 1 485 0
 487 0014 0B4B     		ldr	r3, .L28
 488 0016 0B4A     		ldr	r2, .L28
 489 0018 1268     		ldr	r2, [r2]
 490 001a 0421     		mov	r1, #4
 491 001c 8A43     		bic	r2, r1
 492 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1BIT_MASK)  <<
 493              		.loc 1 486 0
 494 0020 084B     		ldr	r3, .L28
 495 0022 084A     		ldr	r2, .L28
 496 0024 1168     		ldr	r1, [r2]
 497 0026 7868     		ldr	r0, [r7, #4]
 498 0028 0122     		mov	r2, #1
 499 002a 0240     		and	r2, r0
 500 002c 9200     		lsl	r2, r2, #2
 501 002e 0A43     		orr	r2, r1
 502 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/TCPWM.c ****                                                TCPWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/TCPWM.c **** 
 489:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 503              		.loc 1 489 0
 504 0032 3B1C     		mov	r3, r7
 505 0034 0F33     		add	r3, r3, #15
 506 0036 1B78     		ldrb	r3, [r3]
 507 0038 181C     		mov	r0, r3
 508 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/TCPWM.c **** }
 509              		.loc 1 490 0
 510 003e BD46     		mov	sp, r7
 511 0040 05B0     		add	sp, sp, #20
 512              		@ sp needed
 513 0042 90BD     		pop	{r4, r7, pc}
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0044 00012040 		.word	1075839232
 518              		.cfi_endproc
 519              	.LFE11:
 520              		.size	TCPWM_SetPWMSyncKill, .-TCPWM_SetPWMSyncKill
 521              		.section	.text.TCPWM_SetPWMStopOnKill,"ax",%progbits
 522              		.align	2
 523              		.global	TCPWM_SetPWMStopOnKill
 524              		.code	16
 525              		.thumb_func
 526              		.type	TCPWM_SetPWMStopOnKill, %function
 527              	TCPWM_SetPWMStopOnKill:
 528              	.LFB12:
 491:.\Generated_Source\PSoC4/TCPWM.c **** 
 492:.\Generated_Source\PSoC4/TCPWM.c **** 
 493:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/TCPWM.c **** *
 497:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 19


 499:.\Generated_Source\PSoC4/TCPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/TCPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/TCPWM.c **** *
 502:.\Generated_Source\PSoC4/TCPWM.c **** *
 503:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/TCPWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/TCPWM.c **** *
 509:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 510:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 511:.\Generated_Source\PSoC4/TCPWM.c **** *
 512:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/TCPWM.c **** {
 529              		.loc 1 514 0
 530              		.cfi_startproc
 531 0000 90B5     		push	{r4, r7, lr}
 532              		.cfi_def_cfa_offset 12
 533              		.cfi_offset 4, -12
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 85B0     		sub	sp, sp, #20
 537              		.cfi_def_cfa_offset 32
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/TCPWM.c **** 
 517:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 541              		.loc 1 517 0
 542 0008 3C1C     		mov	r4, r7
 543 000a 0F34     		add	r4, r4, #15
 544 000c FFF7FEFF 		bl	CyEnterCriticalSection
 545 0010 031C     		mov	r3, r0
 546 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/TCPWM.c **** 
 519:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PWM_STOP_KILL_MASK;
 547              		.loc 1 519 0
 548 0014 0B4B     		ldr	r3, .L31
 549 0016 0B4A     		ldr	r2, .L31
 550 0018 1268     		ldr	r2, [r2]
 551 001a 0821     		mov	r1, #8
 552 001c 8A43     		bic	r2, r1
 553 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1BIT_MASK)  <<
 554              		.loc 1 520 0
 555 0020 084B     		ldr	r3, .L31
 556 0022 084A     		ldr	r2, .L31
 557 0024 1168     		ldr	r1, [r2]
 558 0026 7868     		ldr	r0, [r7, #4]
 559 0028 0122     		mov	r2, #1
 560 002a 0240     		and	r2, r0
 561 002c D200     		lsl	r2, r2, #3
 562 002e 0A43     		orr	r2, r1
 563 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 20


 521:.\Generated_Source\PSoC4/TCPWM.c ****                                                          TCPWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/TCPWM.c **** 
 523:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 564              		.loc 1 523 0
 565 0032 3B1C     		mov	r3, r7
 566 0034 0F33     		add	r3, r3, #15
 567 0036 1B78     		ldrb	r3, [r3]
 568 0038 181C     		mov	r0, r3
 569 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/TCPWM.c **** }
 570              		.loc 1 524 0
 571 003e BD46     		mov	sp, r7
 572 0040 05B0     		add	sp, sp, #20
 573              		@ sp needed
 574 0042 90BD     		pop	{r4, r7, pc}
 575              	.L32:
 576              		.align	2
 577              	.L31:
 578 0044 00012040 		.word	1075839232
 579              		.cfi_endproc
 580              	.LFE12:
 581              		.size	TCPWM_SetPWMStopOnKill, .-TCPWM_SetPWMStopOnKill
 582              		.section	.text.TCPWM_SetPWMDeadTime,"ax",%progbits
 583              		.align	2
 584              		.global	TCPWM_SetPWMDeadTime
 585              		.code	16
 586              		.thumb_func
 587              		.type	TCPWM_SetPWMDeadTime, %function
 588              	TCPWM_SetPWMDeadTime:
 589              	.LFB13:
 525:.\Generated_Source\PSoC4/TCPWM.c **** 
 526:.\Generated_Source\PSoC4/TCPWM.c **** 
 527:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/TCPWM.c **** *
 531:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/TCPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/TCPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/TCPWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/TCPWM.c **** 
 537:.\Generated_Source\PSoC4/TCPWM.c **** *
 538:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/TCPWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/TCPWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/TCPWM.c **** *
 542:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 543:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 544:.\Generated_Source\PSoC4/TCPWM.c **** *
 545:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/TCPWM.c **** {
 590              		.loc 1 547 0
 591              		.cfi_startproc
 592 0000 90B5     		push	{r4, r7, lr}
 593              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 21


 594              		.cfi_offset 4, -12
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 85B0     		sub	sp, sp, #20
 598              		.cfi_def_cfa_offset 32
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/TCPWM.c **** 
 550:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 602              		.loc 1 550 0
 603 0008 3C1C     		mov	r4, r7
 604 000a 0F34     		add	r4, r4, #15
 605 000c FFF7FEFF 		bl	CyEnterCriticalSection
 606 0010 031C     		mov	r3, r0
 607 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/TCPWM.c **** 
 552:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PRESCALER_MASK;
 608              		.loc 1 552 0
 609 0014 0B4B     		ldr	r3, .L34
 610 0016 0B4A     		ldr	r2, .L34
 611 0018 1168     		ldr	r1, [r2]
 612 001a 0B4A     		ldr	r2, .L34+4
 613 001c 0A40     		and	r2, r1
 614 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((deadTime & TCPWM_8BIT_MASK) <<
 615              		.loc 1 553 0
 616 0020 084B     		ldr	r3, .L34
 617 0022 084A     		ldr	r2, .L34
 618 0024 1168     		ldr	r1, [r2]
 619 0026 7A68     		ldr	r2, [r7, #4]
 620 0028 1202     		lsl	r2, r2, #8
 621 002a 1204     		lsl	r2, r2, #16
 622 002c 120C     		lsr	r2, r2, #16
 623 002e 0A43     		orr	r2, r1
 624 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/TCPWM.c ****                                                           TCPWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/TCPWM.c **** 
 556:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 625              		.loc 1 556 0
 626 0032 3B1C     		mov	r3, r7
 627 0034 0F33     		add	r3, r3, #15
 628 0036 1B78     		ldrb	r3, [r3]
 629 0038 181C     		mov	r0, r3
 630 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/TCPWM.c **** }
 631              		.loc 1 557 0
 632 003e BD46     		mov	sp, r7
 633 0040 05B0     		add	sp, sp, #20
 634              		@ sp needed
 635 0042 90BD     		pop	{r4, r7, pc}
 636              	.L35:
 637              		.align	2
 638              	.L34:
 639 0044 00012040 		.word	1075839232
 640 0048 FF00FFFF 		.word	-65281
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 22


 641              		.cfi_endproc
 642              	.LFE13:
 643              		.size	TCPWM_SetPWMDeadTime, .-TCPWM_SetPWMDeadTime
 644              		.section	.text.TCPWM_SetPWMInvert,"ax",%progbits
 645              		.align	2
 646              		.global	TCPWM_SetPWMInvert
 647              		.code	16
 648              		.thumb_func
 649              		.type	TCPWM_SetPWMInvert, %function
 650              	TCPWM_SetPWMInvert:
 651              	.LFB14:
 558:.\Generated_Source\PSoC4/TCPWM.c **** 
 559:.\Generated_Source\PSoC4/TCPWM.c **** 
 560:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/TCPWM.c **** *
 564:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 565:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/TCPWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/TCPWM.c **** *
 569:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/TCPWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/TCPWM.c **** *
 575:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 576:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 577:.\Generated_Source\PSoC4/TCPWM.c **** *
 578:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/TCPWM.c **** {
 652              		.loc 1 580 0
 653              		.cfi_startproc
 654 0000 90B5     		push	{r4, r7, lr}
 655              		.cfi_def_cfa_offset 12
 656              		.cfi_offset 4, -12
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 85B0     		sub	sp, sp, #20
 660              		.cfi_def_cfa_offset 32
 661 0004 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/TCPWM.c **** 
 583:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 664              		.loc 1 583 0
 665 0008 3C1C     		mov	r4, r7
 666 000a 0F34     		add	r4, r4, #15
 667 000c FFF7FEFF 		bl	CyEnterCriticalSection
 668 0010 031C     		mov	r3, r0
 669 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/TCPWM.c **** 
 585:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_INV_OUT_MASK;
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 23


 670              		.loc 1 585 0
 671 0014 0A4B     		ldr	r3, .L37
 672 0016 0A4A     		ldr	r2, .L37
 673 0018 1168     		ldr	r1, [r2]
 674 001a 0A4A     		ldr	r2, .L37+4
 675 001c 0A40     		and	r2, r1
 676 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= mask;
 677              		.loc 1 586 0
 678 0020 074B     		ldr	r3, .L37
 679 0022 074A     		ldr	r2, .L37
 680 0024 1168     		ldr	r1, [r2]
 681 0026 7A68     		ldr	r2, [r7, #4]
 682 0028 0A43     		orr	r2, r1
 683 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/TCPWM.c **** 
 588:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 684              		.loc 1 588 0
 685 002c 3B1C     		mov	r3, r7
 686 002e 0F33     		add	r3, r3, #15
 687 0030 1B78     		ldrb	r3, [r3]
 688 0032 181C     		mov	r0, r3
 689 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/TCPWM.c **** }
 690              		.loc 1 589 0
 691 0038 BD46     		mov	sp, r7
 692 003a 05B0     		add	sp, sp, #20
 693              		@ sp needed
 694 003c 90BD     		pop	{r4, r7, pc}
 695              	.L38:
 696 003e C046     		.align	2
 697              	.L37:
 698 0040 00012040 		.word	1075839232
 699 0044 FFFFCFFF 		.word	-3145729
 700              		.cfi_endproc
 701              	.LFE14:
 702              		.size	TCPWM_SetPWMInvert, .-TCPWM_SetPWMInvert
 703              		.section	.text.TCPWM_WriteCounter,"ax",%progbits
 704              		.align	2
 705              		.global	TCPWM_WriteCounter
 706              		.code	16
 707              		.thumb_func
 708              		.type	TCPWM_WriteCounter, %function
 709              	TCPWM_WriteCounter:
 710              	.LFB15:
 590:.\Generated_Source\PSoC4/TCPWM.c **** 
 591:.\Generated_Source\PSoC4/TCPWM.c **** 
 592:.\Generated_Source\PSoC4/TCPWM.c **** 
 593:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCounter
 595:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/TCPWM.c **** *
 597:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/TCPWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/TCPWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 24


 602:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/TCPWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/TCPWM.c **** *
 605:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 606:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 607:.\Generated_Source\PSoC4/TCPWM.c **** *
 608:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/TCPWM.c **** {
 711              		.loc 1 610 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 82B0     		sub	sp, sp, #8
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COUNTER_REG = (count & TCPWM_16BIT_MASK);
 722              		.loc 1 611 0
 723 0008 034B     		ldr	r3, .L40
 724 000a 7A68     		ldr	r2, [r7, #4]
 725 000c 1204     		lsl	r2, r2, #16
 726 000e 120C     		lsr	r2, r2, #16
 727 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/TCPWM.c **** }
 728              		.loc 1 612 0
 729 0012 BD46     		mov	sp, r7
 730 0014 02B0     		add	sp, sp, #8
 731              		@ sp needed
 732 0016 80BD     		pop	{r7, pc}
 733              	.L41:
 734              		.align	2
 735              	.L40:
 736 0018 08012040 		.word	1075839240
 737              		.cfi_endproc
 738              	.LFE15:
 739              		.size	TCPWM_WriteCounter, .-TCPWM_WriteCounter
 740              		.section	.text.TCPWM_ReadCounter,"ax",%progbits
 741              		.align	2
 742              		.global	TCPWM_ReadCounter
 743              		.code	16
 744              		.thumb_func
 745              		.type	TCPWM_ReadCounter, %function
 746              	TCPWM_ReadCounter:
 747              	.LFB16:
 613:.\Generated_Source\PSoC4/TCPWM.c **** 
 614:.\Generated_Source\PSoC4/TCPWM.c **** 
 615:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCounter
 617:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/TCPWM.c **** *
 619:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 25


 622:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 624:.\Generated_Source\PSoC4/TCPWM.c **** *
 625:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 626:.\Generated_Source\PSoC4/TCPWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/TCPWM.c **** *
 628:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/TCPWM.c **** {
 748              		.loc 1 630 0
 749              		.cfi_startproc
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COUNTER_REG & TCPWM_16BIT_MASK);
 756              		.loc 1 631 0
 757 0004 034B     		ldr	r3, .L44
 758 0006 1B68     		ldr	r3, [r3]
 759 0008 1B04     		lsl	r3, r3, #16
 760 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/TCPWM.c **** }
 761              		.loc 1 632 0
 762 000c 181C     		mov	r0, r3
 763 000e BD46     		mov	sp, r7
 764              		@ sp needed
 765 0010 80BD     		pop	{r7, pc}
 766              	.L45:
 767 0012 C046     		.align	2
 768              	.L44:
 769 0014 08012040 		.word	1075839240
 770              		.cfi_endproc
 771              	.LFE16:
 772              		.size	TCPWM_ReadCounter, .-TCPWM_ReadCounter
 773              		.section	.text.TCPWM_SetCounterMode,"ax",%progbits
 774              		.align	2
 775              		.global	TCPWM_SetCounterMode
 776              		.code	16
 777              		.thumb_func
 778              		.type	TCPWM_SetCounterMode, %function
 779              	TCPWM_SetCounterMode:
 780              	.LFB17:
 633:.\Generated_Source\PSoC4/TCPWM.c **** 
 634:.\Generated_Source\PSoC4/TCPWM.c **** 
 635:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCounterMode
 637:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/TCPWM.c **** *
 639:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 640:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/TCPWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/TCPWM.c **** *
 643:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/TCPWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 26


 646:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/TCPWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/TCPWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/TCPWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/TCPWM.c **** *
 654:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 655:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 656:.\Generated_Source\PSoC4/TCPWM.c **** *
 657:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/TCPWM.c **** {
 781              		.loc 1 659 0
 782              		.cfi_startproc
 783 0000 90B5     		push	{r4, r7, lr}
 784              		.cfi_def_cfa_offset 12
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 85B0     		sub	sp, sp, #20
 789              		.cfi_def_cfa_offset 32
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/TCPWM.c **** 
 662:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 793              		.loc 1 662 0
 794 0008 3C1C     		mov	r4, r7
 795 000a 0F34     		add	r4, r4, #15
 796 000c FFF7FEFF 		bl	CyEnterCriticalSection
 797 0010 031C     		mov	r3, r0
 798 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/TCPWM.c **** 
 664:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_UPDOWN_MASK;
 799              		.loc 1 664 0
 800 0014 0A4B     		ldr	r3, .L47
 801 0016 0A4A     		ldr	r2, .L47
 802 0018 1168     		ldr	r1, [r2]
 803 001a 0A4A     		ldr	r2, .L47+4
 804 001c 0A40     		and	r2, r1
 805 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= counterMode;
 806              		.loc 1 665 0
 807 0020 074B     		ldr	r3, .L47
 808 0022 074A     		ldr	r2, .L47
 809 0024 1168     		ldr	r1, [r2]
 810 0026 7A68     		ldr	r2, [r7, #4]
 811 0028 0A43     		orr	r2, r1
 812 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/TCPWM.c **** 
 667:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 813              		.loc 1 667 0
 814 002c 3B1C     		mov	r3, r7
 815 002e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 27


 816 0030 1B78     		ldrb	r3, [r3]
 817 0032 181C     		mov	r0, r3
 818 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/TCPWM.c **** }
 819              		.loc 1 668 0
 820 0038 BD46     		mov	sp, r7
 821 003a 05B0     		add	sp, sp, #20
 822              		@ sp needed
 823 003c 90BD     		pop	{r4, r7, pc}
 824              	.L48:
 825 003e C046     		.align	2
 826              	.L47:
 827 0040 00012040 		.word	1075839232
 828 0044 FFFFFCFF 		.word	-196609
 829              		.cfi_endproc
 830              	.LFE17:
 831              		.size	TCPWM_SetCounterMode, .-TCPWM_SetCounterMode
 832              		.section	.text.TCPWM_WritePeriod,"ax",%progbits
 833              		.align	2
 834              		.global	TCPWM_WritePeriod
 835              		.code	16
 836              		.thumb_func
 837              		.type	TCPWM_WritePeriod, %function
 838              	TCPWM_WritePeriod:
 839              	.LFB18:
 669:.\Generated_Source\PSoC4/TCPWM.c **** 
 670:.\Generated_Source\PSoC4/TCPWM.c **** 
 671:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WritePeriod
 673:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/TCPWM.c **** *
 675:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/TCPWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/TCPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/TCPWM.c **** *
 680:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/TCPWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/TCPWM.c **** *
 683:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 684:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 685:.\Generated_Source\PSoC4/TCPWM.c **** *
 686:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/TCPWM.c **** {
 840              		.loc 1 688 0
 841              		.cfi_startproc
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_PERIOD_REG = (period & TCPWM_16BIT_MASK);
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 28


 851              		.loc 1 689 0
 852 0008 034B     		ldr	r3, .L50
 853 000a 7A68     		ldr	r2, [r7, #4]
 854 000c 1204     		lsl	r2, r2, #16
 855 000e 120C     		lsr	r2, r2, #16
 856 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/TCPWM.c **** }
 857              		.loc 1 690 0
 858 0012 BD46     		mov	sp, r7
 859 0014 02B0     		add	sp, sp, #8
 860              		@ sp needed
 861 0016 80BD     		pop	{r7, pc}
 862              	.L51:
 863              		.align	2
 864              	.L50:
 865 0018 14012040 		.word	1075839252
 866              		.cfi_endproc
 867              	.LFE18:
 868              		.size	TCPWM_WritePeriod, .-TCPWM_WritePeriod
 869              		.section	.text.TCPWM_ReadPeriod,"ax",%progbits
 870              		.align	2
 871              		.global	TCPWM_ReadPeriod
 872              		.code	16
 873              		.thumb_func
 874              		.type	TCPWM_ReadPeriod, %function
 875              	TCPWM_ReadPeriod:
 876              	.LFB19:
 691:.\Generated_Source\PSoC4/TCPWM.c **** 
 692:.\Generated_Source\PSoC4/TCPWM.c **** 
 693:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadPeriod
 695:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/TCPWM.c **** *
 697:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/TCPWM.c **** *
 700:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 702:.\Generated_Source\PSoC4/TCPWM.c **** *
 703:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 704:.\Generated_Source\PSoC4/TCPWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/TCPWM.c **** *
 706:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/TCPWM.c **** {
 877              		.loc 1 708 0
 878              		.cfi_startproc
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_PERIOD_REG & TCPWM_16BIT_MASK);
 885              		.loc 1 709 0
 886 0004 034B     		ldr	r3, .L54
 887 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 29


 888 0008 1B04     		lsl	r3, r3, #16
 889 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/TCPWM.c **** }
 890              		.loc 1 710 0
 891 000c 181C     		mov	r0, r3
 892 000e BD46     		mov	sp, r7
 893              		@ sp needed
 894 0010 80BD     		pop	{r7, pc}
 895              	.L55:
 896 0012 C046     		.align	2
 897              	.L54:
 898 0014 14012040 		.word	1075839252
 899              		.cfi_endproc
 900              	.LFE19:
 901              		.size	TCPWM_ReadPeriod, .-TCPWM_ReadPeriod
 902              		.section	.text.TCPWM_SetCompareSwap,"ax",%progbits
 903              		.align	2
 904              		.global	TCPWM_SetCompareSwap
 905              		.code	16
 906              		.thumb_func
 907              		.type	TCPWM_SetCompareSwap, %function
 908              	TCPWM_SetCompareSwap:
 909              	.LFB20:
 711:.\Generated_Source\PSoC4/TCPWM.c **** 
 712:.\Generated_Source\PSoC4/TCPWM.c **** 
 713:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCompareSwap
 715:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/TCPWM.c **** *
 717:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/TCPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/TCPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/TCPWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/TCPWM.c **** *
 723:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/TCPWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/TCPWM.c **** *
 729:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 730:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 731:.\Generated_Source\PSoC4/TCPWM.c **** *
 732:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/TCPWM.c **** {
 910              		.loc 1 734 0
 911              		.cfi_startproc
 912 0000 90B5     		push	{r4, r7, lr}
 913              		.cfi_def_cfa_offset 12
 914              		.cfi_offset 4, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 85B0     		sub	sp, sp, #20
 918              		.cfi_def_cfa_offset 32
 919 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 30


 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/TCPWM.c **** 
 737:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 922              		.loc 1 737 0
 923 0008 3C1C     		mov	r4, r7
 924 000a 0F34     		add	r4, r4, #15
 925 000c FFF7FEFF 		bl	CyEnterCriticalSection
 926 0010 031C     		mov	r3, r0
 927 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/TCPWM.c **** 
 739:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_RELOAD_CC_MASK;
 928              		.loc 1 739 0
 929 0014 0B4B     		ldr	r3, .L57
 930 0016 0B4A     		ldr	r2, .L57
 931 0018 1268     		ldr	r2, [r2]
 932 001a 0121     		mov	r1, #1
 933 001c 8A43     		bic	r2, r1
 934 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= (swapEnable & TCPWM_1BIT_MASK);
 935              		.loc 1 740 0
 936 0020 084B     		ldr	r3, .L57
 937 0022 084A     		ldr	r2, .L57
 938 0024 1168     		ldr	r1, [r2]
 939 0026 7868     		ldr	r0, [r7, #4]
 940 0028 0122     		mov	r2, #1
 941 002a 0240     		and	r2, r0
 942 002c 0A43     		orr	r2, r1
 943 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/TCPWM.c **** 
 742:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 944              		.loc 1 742 0
 945 0030 3B1C     		mov	r3, r7
 946 0032 0F33     		add	r3, r3, #15
 947 0034 1B78     		ldrb	r3, [r3]
 948 0036 181C     		mov	r0, r3
 949 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/TCPWM.c **** }
 950              		.loc 1 743 0
 951 003c BD46     		mov	sp, r7
 952 003e 05B0     		add	sp, sp, #20
 953              		@ sp needed
 954 0040 90BD     		pop	{r4, r7, pc}
 955              	.L58:
 956 0042 C046     		.align	2
 957              	.L57:
 958 0044 00012040 		.word	1075839232
 959              		.cfi_endproc
 960              	.LFE20:
 961              		.size	TCPWM_SetCompareSwap, .-TCPWM_SetCompareSwap
 962              		.section	.text.TCPWM_WritePeriodBuf,"ax",%progbits
 963              		.align	2
 964              		.global	TCPWM_WritePeriodBuf
 965              		.code	16
 966              		.thumb_func
 967              		.type	TCPWM_WritePeriodBuf, %function
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 31


 968              	TCPWM_WritePeriodBuf:
 969              	.LFB21:
 744:.\Generated_Source\PSoC4/TCPWM.c **** 
 745:.\Generated_Source\PSoC4/TCPWM.c **** 
 746:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/TCPWM.c **** *
 750:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/TCPWM.c **** *
 753:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/TCPWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/TCPWM.c **** *
 756:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 757:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 758:.\Generated_Source\PSoC4/TCPWM.c **** *
 759:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/TCPWM.c **** {
 970              		.loc 1 761 0
 971              		.cfi_startproc
 972 0000 80B5     		push	{r7, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 82B0     		sub	sp, sp, #8
 977              		.cfi_def_cfa_offset 16
 978 0004 00AF     		add	r7, sp, #0
 979              		.cfi_def_cfa_register 7
 980 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_PERIOD_BUF_REG = (periodBuf & TCPWM_16BIT_MASK);
 981              		.loc 1 762 0
 982 0008 034B     		ldr	r3, .L60
 983 000a 7A68     		ldr	r2, [r7, #4]
 984 000c 1204     		lsl	r2, r2, #16
 985 000e 120C     		lsr	r2, r2, #16
 986 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/TCPWM.c **** }
 987              		.loc 1 763 0
 988 0012 BD46     		mov	sp, r7
 989 0014 02B0     		add	sp, sp, #8
 990              		@ sp needed
 991 0016 80BD     		pop	{r7, pc}
 992              	.L61:
 993              		.align	2
 994              	.L60:
 995 0018 18012040 		.word	1075839256
 996              		.cfi_endproc
 997              	.LFE21:
 998              		.size	TCPWM_WritePeriodBuf, .-TCPWM_WritePeriodBuf
 999              		.section	.text.TCPWM_ReadPeriodBuf,"ax",%progbits
 1000              		.align	2
 1001              		.global	TCPWM_ReadPeriodBuf
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	TCPWM_ReadPeriodBuf, %function
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 32


 1005              	TCPWM_ReadPeriodBuf:
 1006              	.LFB22:
 764:.\Generated_Source\PSoC4/TCPWM.c **** 
 765:.\Generated_Source\PSoC4/TCPWM.c **** 
 766:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/TCPWM.c **** *
 770:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/TCPWM.c **** *
 773:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 775:.\Generated_Source\PSoC4/TCPWM.c **** *
 776:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 777:.\Generated_Source\PSoC4/TCPWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/TCPWM.c **** *
 779:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/TCPWM.c **** {
 1007              		.loc 1 781 0
 1008              		.cfi_startproc
 1009 0000 80B5     		push	{r7, lr}
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_PERIOD_BUF_REG & TCPWM_16BIT_MASK);
 1015              		.loc 1 782 0
 1016 0004 034B     		ldr	r3, .L64
 1017 0006 1B68     		ldr	r3, [r3]
 1018 0008 1B04     		lsl	r3, r3, #16
 1019 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/TCPWM.c **** }
 1020              		.loc 1 783 0
 1021 000c 181C     		mov	r0, r3
 1022 000e BD46     		mov	sp, r7
 1023              		@ sp needed
 1024 0010 80BD     		pop	{r7, pc}
 1025              	.L65:
 1026 0012 C046     		.align	2
 1027              	.L64:
 1028 0014 18012040 		.word	1075839256
 1029              		.cfi_endproc
 1030              	.LFE22:
 1031              		.size	TCPWM_ReadPeriodBuf, .-TCPWM_ReadPeriodBuf
 1032              		.section	.text.TCPWM_SetPeriodSwap,"ax",%progbits
 1033              		.align	2
 1034              		.global	TCPWM_SetPeriodSwap
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	TCPWM_SetPeriodSwap, %function
 1038              	TCPWM_SetPeriodSwap:
 1039              	.LFB23:
 784:.\Generated_Source\PSoC4/TCPWM.c **** 
 785:.\Generated_Source\PSoC4/TCPWM.c **** 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 33


 786:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPeriodSwap
 788:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/TCPWM.c **** *
 790:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/TCPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/TCPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/TCPWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/TCPWM.c **** *
 796:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/TCPWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/TCPWM.c **** *
 802:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 803:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 804:.\Generated_Source\PSoC4/TCPWM.c **** *
 805:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/TCPWM.c **** {
 1040              		.loc 1 807 0
 1041              		.cfi_startproc
 1042 0000 90B5     		push	{r4, r7, lr}
 1043              		.cfi_def_cfa_offset 12
 1044              		.cfi_offset 4, -12
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 85B0     		sub	sp, sp, #20
 1048              		.cfi_def_cfa_offset 32
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/TCPWM.c **** 
 810:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1052              		.loc 1 810 0
 1053 0008 3C1C     		mov	r4, r7
 1054 000a 0F34     		add	r4, r4, #15
 1055 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1056 0010 031C     		mov	r3, r0
 1057 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/TCPWM.c **** 
 812:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_RELOAD_PERIOD_MASK;
 1058              		.loc 1 812 0
 1059 0014 0B4B     		ldr	r3, .L67
 1060 0016 0B4A     		ldr	r2, .L67
 1061 0018 1268     		ldr	r2, [r2]
 1062 001a 0221     		mov	r1, #2
 1063 001c 8A43     		bic	r2, r1
 1064 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1BIT_MASK) <<
 1065              		.loc 1 813 0
 1066 0020 084B     		ldr	r3, .L67
 1067 0022 084A     		ldr	r2, .L67
 1068 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 34


 1069 0026 7868     		ldr	r0, [r7, #4]
 1070 0028 0122     		mov	r2, #1
 1071 002a 0240     		and	r2, r0
 1072 002c 5200     		lsl	r2, r2, #1
 1073 002e 0A43     		orr	r2, r1
 1074 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/TCPWM.c ****                                                             TCPWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/TCPWM.c **** 
 816:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1075              		.loc 1 816 0
 1076 0032 3B1C     		mov	r3, r7
 1077 0034 0F33     		add	r3, r3, #15
 1078 0036 1B78     		ldrb	r3, [r3]
 1079 0038 181C     		mov	r0, r3
 1080 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/TCPWM.c **** }
 1081              		.loc 1 817 0
 1082 003e BD46     		mov	sp, r7
 1083 0040 05B0     		add	sp, sp, #20
 1084              		@ sp needed
 1085 0042 90BD     		pop	{r4, r7, pc}
 1086              	.L68:
 1087              		.align	2
 1088              	.L67:
 1089 0044 00012040 		.word	1075839232
 1090              		.cfi_endproc
 1091              	.LFE23:
 1092              		.size	TCPWM_SetPeriodSwap, .-TCPWM_SetPeriodSwap
 1093              		.section	.text.TCPWM_WriteCompare,"ax",%progbits
 1094              		.align	2
 1095              		.global	TCPWM_WriteCompare
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	TCPWM_WriteCompare, %function
 1099              	TCPWM_WriteCompare:
 1100              	.LFB24:
 818:.\Generated_Source\PSoC4/TCPWM.c **** 
 819:.\Generated_Source\PSoC4/TCPWM.c **** 
 820:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCompare
 822:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/TCPWM.c **** *
 824:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/TCPWM.c **** *
 828:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/TCPWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/TCPWM.c **** *
 831:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 832:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 833:.\Generated_Source\PSoC4/TCPWM.c **** *
 834:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/TCPWM.c **** {
 1101              		.loc 1 836 0
 1102              		.cfi_startproc
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 35


 1103 0000 80B5     		push	{r7, lr}
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 82B0     		sub	sp, sp, #8
 1108              		.cfi_def_cfa_offset 16
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 1111 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/TCPWM.c **** 
 841:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/TCPWM.c **** 
 844:.\Generated_Source\PSoC4/TCPWM.c ****         if (((uint32)TCPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/TCPWM.c ****         {
 846:.\Generated_Source\PSoC4/TCPWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/TCPWM.c ****         }
 848:.\Generated_Source\PSoC4/TCPWM.c ****         else if (((uint32)TCPWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/TCPWM.c ****         {
 850:.\Generated_Source\PSoC4/TCPWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/TCPWM.c ****         }
 852:.\Generated_Source\PSoC4/TCPWM.c ****         else
 853:.\Generated_Source\PSoC4/TCPWM.c ****         {
 854:.\Generated_Source\PSoC4/TCPWM.c ****         }
 855:.\Generated_Source\PSoC4/TCPWM.c ****         
 856:.\Generated_Source\PSoC4/TCPWM.c ****     
 857:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/TCPWM.c ****     
 859:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COMP_CAP_REG = (compare & TCPWM_16BIT_MASK);
 1112              		.loc 1 859 0
 1113 0008 034B     		ldr	r3, .L70
 1114 000a 7A68     		ldr	r2, [r7, #4]
 1115 000c 1204     		lsl	r2, r2, #16
 1116 000e 120C     		lsr	r2, r2, #16
 1117 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/TCPWM.c **** }
 1118              		.loc 1 860 0
 1119 0012 BD46     		mov	sp, r7
 1120 0014 02B0     		add	sp, sp, #8
 1121              		@ sp needed
 1122 0016 80BD     		pop	{r7, pc}
 1123              	.L71:
 1124              		.align	2
 1125              	.L70:
 1126 0018 0C012040 		.word	1075839244
 1127              		.cfi_endproc
 1128              	.LFE24:
 1129              		.size	TCPWM_WriteCompare, .-TCPWM_WriteCompare
 1130              		.section	.text.TCPWM_ReadCompare,"ax",%progbits
 1131              		.align	2
 1132              		.global	TCPWM_ReadCompare
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	TCPWM_ReadCompare, %function
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 36


 1136              	TCPWM_ReadCompare:
 1137              	.LFB25:
 861:.\Generated_Source\PSoC4/TCPWM.c **** 
 862:.\Generated_Source\PSoC4/TCPWM.c **** 
 863:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCompare
 865:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/TCPWM.c **** *
 867:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/TCPWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/TCPWM.c **** *
 871:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 873:.\Generated_Source\PSoC4/TCPWM.c **** *
 874:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 875:.\Generated_Source\PSoC4/TCPWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/TCPWM.c **** *
 877:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/TCPWM.c **** {
 1138              		.loc 1 879 0
 1139              		.cfi_startproc
 1140 0000 80B5     		push	{r7, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/TCPWM.c **** 
 885:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/TCPWM.c ****         
 888:.\Generated_Source\PSoC4/TCPWM.c ****         regVal = TCPWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/TCPWM.c ****         
 890:.\Generated_Source\PSoC4/TCPWM.c ****         if (((uint32)TCPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/TCPWM.c ****         {
 892:.\Generated_Source\PSoC4/TCPWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/TCPWM.c ****         }
 894:.\Generated_Source\PSoC4/TCPWM.c ****         else if (((uint32)TCPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/TCPWM.c ****         {
 896:.\Generated_Source\PSoC4/TCPWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/TCPWM.c ****         }
 898:.\Generated_Source\PSoC4/TCPWM.c ****         else
 899:.\Generated_Source\PSoC4/TCPWM.c ****         {
 900:.\Generated_Source\PSoC4/TCPWM.c ****         }
 901:.\Generated_Source\PSoC4/TCPWM.c **** 
 902:.\Generated_Source\PSoC4/TCPWM.c ****         return (regVal & TCPWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/TCPWM.c ****     #else
 904:.\Generated_Source\PSoC4/TCPWM.c ****         return (TCPWM_COMP_CAP_REG & TCPWM_16BIT_MASK);
 1146              		.loc 1 904 0
 1147 0004 034B     		ldr	r3, .L74
 1148 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 37


 1149 0008 1B04     		lsl	r3, r3, #16
 1150 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/TCPWM.c **** }
 1151              		.loc 1 906 0
 1152 000c 181C     		mov	r0, r3
 1153 000e BD46     		mov	sp, r7
 1154              		@ sp needed
 1155 0010 80BD     		pop	{r7, pc}
 1156              	.L75:
 1157 0012 C046     		.align	2
 1158              	.L74:
 1159 0014 0C012040 		.word	1075839244
 1160              		.cfi_endproc
 1161              	.LFE25:
 1162              		.size	TCPWM_ReadCompare, .-TCPWM_ReadCompare
 1163              		.section	.text.TCPWM_WriteCompareBuf,"ax",%progbits
 1164              		.align	2
 1165              		.global	TCPWM_WriteCompareBuf
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	TCPWM_WriteCompareBuf, %function
 1169              	TCPWM_WriteCompareBuf:
 1170              	.LFB26:
 907:.\Generated_Source\PSoC4/TCPWM.c **** 
 908:.\Generated_Source\PSoC4/TCPWM.c **** 
 909:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/TCPWM.c **** *
 913:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/TCPWM.c **** *
 917:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/TCPWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/TCPWM.c **** *
 920:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 921:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 922:.\Generated_Source\PSoC4/TCPWM.c **** *
 923:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/TCPWM.c **** {
 1171              		.loc 1 925 0
 1172              		.cfi_startproc
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 82B0     		sub	sp, sp, #8
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 38


 929:.\Generated_Source\PSoC4/TCPWM.c **** 
 930:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/TCPWM.c **** 
 933:.\Generated_Source\PSoC4/TCPWM.c ****         if (((uint32)TCPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/TCPWM.c ****         {
 935:.\Generated_Source\PSoC4/TCPWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/TCPWM.c ****         }
 937:.\Generated_Source\PSoC4/TCPWM.c ****         else if (((uint32)TCPWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/TCPWM.c ****         {
 939:.\Generated_Source\PSoC4/TCPWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/TCPWM.c ****         }
 941:.\Generated_Source\PSoC4/TCPWM.c ****         else
 942:.\Generated_Source\PSoC4/TCPWM.c ****         {
 943:.\Generated_Source\PSoC4/TCPWM.c ****         }
 944:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/TCPWM.c ****     
 946:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COMP_CAP_BUF_REG = (compareBuf & TCPWM_16BIT_MASK);
 1182              		.loc 1 946 0
 1183 0008 034B     		ldr	r3, .L77
 1184 000a 7A68     		ldr	r2, [r7, #4]
 1185 000c 1204     		lsl	r2, r2, #16
 1186 000e 120C     		lsr	r2, r2, #16
 1187 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/TCPWM.c **** }
 1188              		.loc 1 947 0
 1189 0012 BD46     		mov	sp, r7
 1190 0014 02B0     		add	sp, sp, #8
 1191              		@ sp needed
 1192 0016 80BD     		pop	{r7, pc}
 1193              	.L78:
 1194              		.align	2
 1195              	.L77:
 1196 0018 10012040 		.word	1075839248
 1197              		.cfi_endproc
 1198              	.LFE26:
 1199              		.size	TCPWM_WriteCompareBuf, .-TCPWM_WriteCompareBuf
 1200              		.section	.text.TCPWM_ReadCompareBuf,"ax",%progbits
 1201              		.align	2
 1202              		.global	TCPWM_ReadCompareBuf
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	TCPWM_ReadCompareBuf, %function
 1206              	TCPWM_ReadCompareBuf:
 1207              	.LFB27:
 948:.\Generated_Source\PSoC4/TCPWM.c **** 
 949:.\Generated_Source\PSoC4/TCPWM.c **** 
 950:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/TCPWM.c **** *
 954:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/TCPWM.c **** *
 958:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 959:.\Generated_Source\PSoC4/TCPWM.c **** *  None
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 39


 960:.\Generated_Source\PSoC4/TCPWM.c **** *
 961:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 962:.\Generated_Source\PSoC4/TCPWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/TCPWM.c **** *
 964:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/TCPWM.c **** {
 1208              		.loc 1 966 0
 1209              		.cfi_startproc
 1210 0000 80B5     		push	{r7, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 7, -8
 1213              		.cfi_offset 14, -4
 1214 0002 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/TCPWM.c **** 
 972:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/TCPWM.c **** 
 975:.\Generated_Source\PSoC4/TCPWM.c ****         regVal = TCPWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/TCPWM.c ****         
 977:.\Generated_Source\PSoC4/TCPWM.c ****         if (((uint32)TCPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/TCPWM.c ****         {
 979:.\Generated_Source\PSoC4/TCPWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/TCPWM.c ****         }
 981:.\Generated_Source\PSoC4/TCPWM.c ****         else if (((uint32)TCPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/TCPWM.c ****         {
 983:.\Generated_Source\PSoC4/TCPWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/TCPWM.c ****         }
 985:.\Generated_Source\PSoC4/TCPWM.c ****         else
 986:.\Generated_Source\PSoC4/TCPWM.c ****         {
 987:.\Generated_Source\PSoC4/TCPWM.c ****         }
 988:.\Generated_Source\PSoC4/TCPWM.c **** 
 989:.\Generated_Source\PSoC4/TCPWM.c ****         return (regVal & TCPWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/TCPWM.c ****     #else
 991:.\Generated_Source\PSoC4/TCPWM.c ****         return (TCPWM_COMP_CAP_BUF_REG & TCPWM_16BIT_MASK);
 1216              		.loc 1 991 0
 1217 0004 034B     		ldr	r3, .L81
 1218 0006 1B68     		ldr	r3, [r3]
 1219 0008 1B04     		lsl	r3, r3, #16
 1220 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/TCPWM.c **** }
 1221              		.loc 1 993 0
 1222 000c 181C     		mov	r0, r3
 1223 000e BD46     		mov	sp, r7
 1224              		@ sp needed
 1225 0010 80BD     		pop	{r7, pc}
 1226              	.L82:
 1227 0012 C046     		.align	2
 1228              	.L81:
 1229 0014 10012040 		.word	1075839248
 1230              		.cfi_endproc
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 40


 1231              	.LFE27:
 1232              		.size	TCPWM_ReadCompareBuf, .-TCPWM_ReadCompareBuf
 1233              		.section	.text.TCPWM_ReadCapture,"ax",%progbits
 1234              		.align	2
 1235              		.global	TCPWM_ReadCapture
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	TCPWM_ReadCapture, %function
 1239              	TCPWM_ReadCapture:
 1240              	.LFB28:
 994:.\Generated_Source\PSoC4/TCPWM.c **** 
 995:.\Generated_Source\PSoC4/TCPWM.c **** 
 996:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCapture
 998:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/TCPWM.c **** *
1000:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/TCPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/TCPWM.c **** *
1004:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1006:.\Generated_Source\PSoC4/TCPWM.c **** *
1007:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1008:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/TCPWM.c **** *
1010:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/TCPWM.c **** {
 1241              		.loc 1 1012 0
 1242              		.cfi_startproc
 1243 0000 80B5     		push	{r7, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COMP_CAP_REG & TCPWM_16BIT_MASK);
 1249              		.loc 1 1013 0
 1250 0004 034B     		ldr	r3, .L85
 1251 0006 1B68     		ldr	r3, [r3]
 1252 0008 1B04     		lsl	r3, r3, #16
 1253 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/TCPWM.c **** }
 1254              		.loc 1 1014 0
 1255 000c 181C     		mov	r0, r3
 1256 000e BD46     		mov	sp, r7
 1257              		@ sp needed
 1258 0010 80BD     		pop	{r7, pc}
 1259              	.L86:
 1260 0012 C046     		.align	2
 1261              	.L85:
 1262 0014 0C012040 		.word	1075839244
 1263              		.cfi_endproc
 1264              	.LFE28:
 1265              		.size	TCPWM_ReadCapture, .-TCPWM_ReadCapture
 1266              		.section	.text.TCPWM_ReadCaptureBuf,"ax",%progbits
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 41


 1267              		.align	2
 1268              		.global	TCPWM_ReadCaptureBuf
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	TCPWM_ReadCaptureBuf, %function
 1272              	TCPWM_ReadCaptureBuf:
 1273              	.LFB29:
1015:.\Generated_Source\PSoC4/TCPWM.c **** 
1016:.\Generated_Source\PSoC4/TCPWM.c **** 
1017:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/TCPWM.c **** *
1021:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/TCPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/TCPWM.c **** *
1025:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1027:.\Generated_Source\PSoC4/TCPWM.c **** *
1028:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1029:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/TCPWM.c **** *
1031:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/TCPWM.c **** {
 1274              		.loc 1 1033 0
 1275              		.cfi_startproc
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COMP_CAP_BUF_REG & TCPWM_16BIT_MASK);
 1282              		.loc 1 1034 0
 1283 0004 034B     		ldr	r3, .L89
 1284 0006 1B68     		ldr	r3, [r3]
 1285 0008 1B04     		lsl	r3, r3, #16
 1286 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/TCPWM.c **** }
 1287              		.loc 1 1035 0
 1288 000c 181C     		mov	r0, r3
 1289 000e BD46     		mov	sp, r7
 1290              		@ sp needed
 1291 0010 80BD     		pop	{r7, pc}
 1292              	.L90:
 1293 0012 C046     		.align	2
 1294              	.L89:
 1295 0014 10012040 		.word	1075839248
 1296              		.cfi_endproc
 1297              	.LFE29:
 1298              		.size	TCPWM_ReadCaptureBuf, .-TCPWM_ReadCaptureBuf
 1299              		.section	.text.TCPWM_SetCaptureMode,"ax",%progbits
 1300              		.align	2
 1301              		.global	TCPWM_SetCaptureMode
 1302              		.code	16
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 42


 1303              		.thumb_func
 1304              		.type	TCPWM_SetCaptureMode, %function
 1305              	TCPWM_SetCaptureMode:
 1306              	.LFB30:
1036:.\Generated_Source\PSoC4/TCPWM.c **** 
1037:.\Generated_Source\PSoC4/TCPWM.c **** 
1038:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/TCPWM.c **** *
1042:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/TCPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/TCPWM.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/TCPWM.c **** *
1047:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/TCPWM.c **** *
1055:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1056:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1057:.\Generated_Source\PSoC4/TCPWM.c **** *
1058:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/TCPWM.c **** {
 1307              		.loc 1 1060 0
 1308              		.cfi_startproc
 1309 0000 90B5     		push	{r4, r7, lr}
 1310              		.cfi_def_cfa_offset 12
 1311              		.cfi_offset 4, -12
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 85B0     		sub	sp, sp, #20
 1315              		.cfi_def_cfa_offset 32
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/TCPWM.c **** 
1063:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1319              		.loc 1 1063 0
 1320 0008 3C1C     		mov	r4, r7
 1321 000a 0F34     		add	r4, r4, #15
 1322 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1323 0010 031C     		mov	r3, r0
 1324 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/TCPWM.c **** 
1065:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_CAPTURE_MASK;
 1325              		.loc 1 1065 0
 1326 0014 0A4B     		ldr	r3, .L92
 1327 0016 0A4A     		ldr	r2, .L92
 1328 0018 1268     		ldr	r2, [r2]
 1329 001a 0321     		mov	r1, #3
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 43


 1330 001c 8A43     		bic	r2, r1
 1331 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= triggerMode;
 1332              		.loc 1 1066 0
 1333 0020 074B     		ldr	r3, .L92
 1334 0022 074A     		ldr	r2, .L92
 1335 0024 1168     		ldr	r1, [r2]
 1336 0026 7A68     		ldr	r2, [r7, #4]
 1337 0028 0A43     		orr	r2, r1
 1338 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/TCPWM.c **** 
1068:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1339              		.loc 1 1068 0
 1340 002c 3B1C     		mov	r3, r7
 1341 002e 0F33     		add	r3, r3, #15
 1342 0030 1B78     		ldrb	r3, [r3]
 1343 0032 181C     		mov	r0, r3
 1344 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/TCPWM.c **** }
 1345              		.loc 1 1069 0
 1346 0038 BD46     		mov	sp, r7
 1347 003a 05B0     		add	sp, sp, #20
 1348              		@ sp needed
 1349 003c 90BD     		pop	{r4, r7, pc}
 1350              	.L93:
 1351 003e C046     		.align	2
 1352              	.L92:
 1353 0040 24012040 		.word	1075839268
 1354              		.cfi_endproc
 1355              	.LFE30:
 1356              		.size	TCPWM_SetCaptureMode, .-TCPWM_SetCaptureMode
 1357              		.section	.text.TCPWM_SetReloadMode,"ax",%progbits
 1358              		.align	2
 1359              		.global	TCPWM_SetReloadMode
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	TCPWM_SetReloadMode, %function
 1363              	TCPWM_SetReloadMode:
 1364              	.LFB31:
1070:.\Generated_Source\PSoC4/TCPWM.c **** 
1071:.\Generated_Source\PSoC4/TCPWM.c **** 
1072:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetReloadMode
1074:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/TCPWM.c **** *
1076:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/TCPWM.c **** *  input.
1079:.\Generated_Source\PSoC4/TCPWM.c **** *
1080:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 44


1088:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1089:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1090:.\Generated_Source\PSoC4/TCPWM.c **** *
1091:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/TCPWM.c **** {
 1365              		.loc 1 1093 0
 1366              		.cfi_startproc
 1367 0000 90B5     		push	{r4, r7, lr}
 1368              		.cfi_def_cfa_offset 12
 1369              		.cfi_offset 4, -12
 1370              		.cfi_offset 7, -8
 1371              		.cfi_offset 14, -4
 1372 0002 85B0     		sub	sp, sp, #20
 1373              		.cfi_def_cfa_offset 32
 1374 0004 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
 1376 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/TCPWM.c **** 
1096:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1377              		.loc 1 1096 0
 1378 0008 3C1C     		mov	r4, r7
 1379 000a 0F34     		add	r4, r4, #15
 1380 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1381 0010 031C     		mov	r3, r0
 1382 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/TCPWM.c **** 
1098:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_RELOAD_MASK;
 1383              		.loc 1 1098 0
 1384 0014 0A4B     		ldr	r3, .L95
 1385 0016 0A4A     		ldr	r2, .L95
 1386 0018 1268     		ldr	r2, [r2]
 1387 001a 3021     		mov	r1, #48
 1388 001c 8A43     		bic	r2, r1
 1389 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_RELOAD_SHIFT));
 1390              		.loc 1 1099 0
 1391 0020 074B     		ldr	r3, .L95
 1392 0022 074A     		ldr	r2, .L95
 1393 0024 1168     		ldr	r1, [r2]
 1394 0026 7A68     		ldr	r2, [r7, #4]
 1395 0028 1201     		lsl	r2, r2, #4
 1396 002a 0A43     		orr	r2, r1
 1397 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/TCPWM.c **** 
1101:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1398              		.loc 1 1101 0
 1399 002e 3B1C     		mov	r3, r7
 1400 0030 0F33     		add	r3, r3, #15
 1401 0032 1B78     		ldrb	r3, [r3]
 1402 0034 181C     		mov	r0, r3
 1403 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/TCPWM.c **** }
 1404              		.loc 1 1102 0
 1405 003a BD46     		mov	sp, r7
 1406 003c 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 45


 1407              		@ sp needed
 1408 003e 90BD     		pop	{r4, r7, pc}
 1409              	.L96:
 1410              		.align	2
 1411              	.L95:
 1412 0040 24012040 		.word	1075839268
 1413              		.cfi_endproc
 1414              	.LFE31:
 1415              		.size	TCPWM_SetReloadMode, .-TCPWM_SetReloadMode
 1416              		.section	.text.TCPWM_SetStartMode,"ax",%progbits
 1417              		.align	2
 1418              		.global	TCPWM_SetStartMode
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	TCPWM_SetStartMode, %function
 1422              	TCPWM_SetStartMode:
 1423              	.LFB32:
1103:.\Generated_Source\PSoC4/TCPWM.c **** 
1104:.\Generated_Source\PSoC4/TCPWM.c **** 
1105:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetStartMode
1107:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/TCPWM.c **** *
1109:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/TCPWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/TCPWM.c **** *
1113:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/TCPWM.c **** *
1121:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1122:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1123:.\Generated_Source\PSoC4/TCPWM.c **** *
1124:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/TCPWM.c **** {
 1424              		.loc 1 1126 0
 1425              		.cfi_startproc
 1426 0000 90B5     		push	{r4, r7, lr}
 1427              		.cfi_def_cfa_offset 12
 1428              		.cfi_offset 4, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 85B0     		sub	sp, sp, #20
 1432              		.cfi_def_cfa_offset 32
 1433 0004 00AF     		add	r7, sp, #0
 1434              		.cfi_def_cfa_register 7
 1435 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/TCPWM.c **** 
1129:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1436              		.loc 1 1129 0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 46


 1437 0008 3C1C     		mov	r4, r7
 1438 000a 0F34     		add	r4, r4, #15
 1439 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1440 0010 031C     		mov	r3, r0
 1441 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/TCPWM.c **** 
1131:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_START_MASK;
 1442              		.loc 1 1131 0
 1443 0014 0A4B     		ldr	r3, .L98
 1444 0016 0A4A     		ldr	r2, .L98
 1445 0018 1168     		ldr	r1, [r2]
 1446 001a 0A4A     		ldr	r2, .L98+4
 1447 001c 0A40     		and	r2, r1
 1448 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_START_SHIFT));
 1449              		.loc 1 1132 0
 1450 0020 074B     		ldr	r3, .L98
 1451 0022 074A     		ldr	r2, .L98
 1452 0024 1168     		ldr	r1, [r2]
 1453 0026 7A68     		ldr	r2, [r7, #4]
 1454 0028 1202     		lsl	r2, r2, #8
 1455 002a 0A43     		orr	r2, r1
 1456 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/TCPWM.c **** 
1134:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1457              		.loc 1 1134 0
 1458 002e 3B1C     		mov	r3, r7
 1459 0030 0F33     		add	r3, r3, #15
 1460 0032 1B78     		ldrb	r3, [r3]
 1461 0034 181C     		mov	r0, r3
 1462 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/TCPWM.c **** }
 1463              		.loc 1 1135 0
 1464 003a BD46     		mov	sp, r7
 1465 003c 05B0     		add	sp, sp, #20
 1466              		@ sp needed
 1467 003e 90BD     		pop	{r4, r7, pc}
 1468              	.L99:
 1469              		.align	2
 1470              	.L98:
 1471 0040 24012040 		.word	1075839268
 1472 0044 FFFCFFFF 		.word	-769
 1473              		.cfi_endproc
 1474              	.LFE32:
 1475              		.size	TCPWM_SetStartMode, .-TCPWM_SetStartMode
 1476              		.section	.text.TCPWM_SetStopMode,"ax",%progbits
 1477              		.align	2
 1478              		.global	TCPWM_SetStopMode
 1479              		.code	16
 1480              		.thumb_func
 1481              		.type	TCPWM_SetStopMode, %function
 1482              	TCPWM_SetStopMode:
 1483              	.LFB33:
1136:.\Generated_Source\PSoC4/TCPWM.c **** 
1137:.\Generated_Source\PSoC4/TCPWM.c **** 
1138:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetStopMode
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 47


1140:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/TCPWM.c **** *
1142:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/TCPWM.c **** *
1145:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/TCPWM.c **** *
1153:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1154:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1155:.\Generated_Source\PSoC4/TCPWM.c **** *
1156:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/TCPWM.c **** {
 1484              		.loc 1 1158 0
 1485              		.cfi_startproc
 1486 0000 90B5     		push	{r4, r7, lr}
 1487              		.cfi_def_cfa_offset 12
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 85B0     		sub	sp, sp, #20
 1492              		.cfi_def_cfa_offset 32
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/TCPWM.c **** 
1161:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1496              		.loc 1 1161 0
 1497 0008 3C1C     		mov	r4, r7
 1498 000a 0F34     		add	r4, r4, #15
 1499 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1500 0010 031C     		mov	r3, r0
 1501 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/TCPWM.c **** 
1163:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_STOP_MASK;
 1502              		.loc 1 1163 0
 1503 0014 0A4B     		ldr	r3, .L101
 1504 0016 0A4A     		ldr	r2, .L101
 1505 0018 1268     		ldr	r2, [r2]
 1506 001a C021     		mov	r1, #192
 1507 001c 8A43     		bic	r2, r1
 1508 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_STOP_SHIFT));
 1509              		.loc 1 1164 0
 1510 0020 074B     		ldr	r3, .L101
 1511 0022 074A     		ldr	r2, .L101
 1512 0024 1168     		ldr	r1, [r2]
 1513 0026 7A68     		ldr	r2, [r7, #4]
 1514 0028 9201     		lsl	r2, r2, #6
 1515 002a 0A43     		orr	r2, r1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 48


 1516 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/TCPWM.c **** 
1166:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1517              		.loc 1 1166 0
 1518 002e 3B1C     		mov	r3, r7
 1519 0030 0F33     		add	r3, r3, #15
 1520 0032 1B78     		ldrb	r3, [r3]
 1521 0034 181C     		mov	r0, r3
 1522 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/TCPWM.c **** }
 1523              		.loc 1 1167 0
 1524 003a BD46     		mov	sp, r7
 1525 003c 05B0     		add	sp, sp, #20
 1526              		@ sp needed
 1527 003e 90BD     		pop	{r4, r7, pc}
 1528              	.L102:
 1529              		.align	2
 1530              	.L101:
 1531 0040 24012040 		.word	1075839268
 1532              		.cfi_endproc
 1533              	.LFE33:
 1534              		.size	TCPWM_SetStopMode, .-TCPWM_SetStopMode
 1535              		.section	.text.TCPWM_SetCountMode,"ax",%progbits
 1536              		.align	2
 1537              		.global	TCPWM_SetCountMode
 1538              		.code	16
 1539              		.thumb_func
 1540              		.type	TCPWM_SetCountMode, %function
 1541              	TCPWM_SetCountMode:
 1542              	.LFB34:
1168:.\Generated_Source\PSoC4/TCPWM.c **** 
1169:.\Generated_Source\PSoC4/TCPWM.c **** 
1170:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCountMode
1172:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/TCPWM.c **** *
1174:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/TCPWM.c **** *  input.
1177:.\Generated_Source\PSoC4/TCPWM.c **** *
1178:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/TCPWM.c **** *
1186:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1187:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1188:.\Generated_Source\PSoC4/TCPWM.c **** *
1189:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/TCPWM.c **** {
 1543              		.loc 1 1191 0
 1544              		.cfi_startproc
 1545 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 49


 1546              		.cfi_def_cfa_offset 12
 1547              		.cfi_offset 4, -12
 1548              		.cfi_offset 7, -8
 1549              		.cfi_offset 14, -4
 1550 0002 85B0     		sub	sp, sp, #20
 1551              		.cfi_def_cfa_offset 32
 1552 0004 00AF     		add	r7, sp, #0
 1553              		.cfi_def_cfa_register 7
 1554 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/TCPWM.c **** 
1194:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1555              		.loc 1 1194 0
 1556 0008 3C1C     		mov	r4, r7
 1557 000a 0F34     		add	r4, r4, #15
 1558 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1559 0010 031C     		mov	r3, r0
 1560 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/TCPWM.c **** 
1196:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_COUNT_MASK;
 1561              		.loc 1 1196 0
 1562 0014 0A4B     		ldr	r3, .L104
 1563 0016 0A4A     		ldr	r2, .L104
 1564 0018 1268     		ldr	r2, [r2]
 1565 001a 0C21     		mov	r1, #12
 1566 001c 8A43     		bic	r2, r1
 1567 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_COUNT_SHIFT));
 1568              		.loc 1 1197 0
 1569 0020 074B     		ldr	r3, .L104
 1570 0022 074A     		ldr	r2, .L104
 1571 0024 1168     		ldr	r1, [r2]
 1572 0026 7A68     		ldr	r2, [r7, #4]
 1573 0028 9200     		lsl	r2, r2, #2
 1574 002a 0A43     		orr	r2, r1
 1575 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/TCPWM.c **** 
1199:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1576              		.loc 1 1199 0
 1577 002e 3B1C     		mov	r3, r7
 1578 0030 0F33     		add	r3, r3, #15
 1579 0032 1B78     		ldrb	r3, [r3]
 1580 0034 181C     		mov	r0, r3
 1581 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/TCPWM.c **** }
 1582              		.loc 1 1200 0
 1583 003a BD46     		mov	sp, r7
 1584 003c 05B0     		add	sp, sp, #20
 1585              		@ sp needed
 1586 003e 90BD     		pop	{r4, r7, pc}
 1587              	.L105:
 1588              		.align	2
 1589              	.L104:
 1590 0040 24012040 		.word	1075839268
 1591              		.cfi_endproc
 1592              	.LFE34:
 1593              		.size	TCPWM_SetCountMode, .-TCPWM_SetCountMode
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 50


 1594              		.section	.text.TCPWM_TriggerCommand,"ax",%progbits
 1595              		.align	2
 1596              		.global	TCPWM_TriggerCommand
 1597              		.code	16
 1598              		.thumb_func
 1599              		.type	TCPWM_TriggerCommand, %function
 1600              	TCPWM_TriggerCommand:
 1601              	.LFB35:
1201:.\Generated_Source\PSoC4/TCPWM.c **** 
1202:.\Generated_Source\PSoC4/TCPWM.c **** 
1203:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_TriggerCommand
1205:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/TCPWM.c **** *
1207:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/TCPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/TCPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/TCPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/TCPWM.c **** *
1212:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/TCPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/TCPWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/TCPWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/TCPWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/TCPWM.c **** *        define.
1218:.\Generated_Source\PSoC4/TCPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/TCPWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/TCPWM.c **** *
1226:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1227:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1228:.\Generated_Source\PSoC4/TCPWM.c **** *
1229:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/TCPWM.c **** {
 1602              		.loc 1 1231 0
 1603              		.cfi_startproc
 1604 0000 90B5     		push	{r4, r7, lr}
 1605              		.cfi_def_cfa_offset 12
 1606              		.cfi_offset 4, -12
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 85B0     		sub	sp, sp, #20
 1610              		.cfi_def_cfa_offset 32
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 1614 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/TCPWM.c **** 
1234:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1615              		.loc 1 1234 0
 1616 000a 3C1C     		mov	r4, r7
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 51


 1617 000c 0F34     		add	r4, r4, #15
 1618 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1619 0012 031C     		mov	r3, r0
 1620 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/TCPWM.c **** 
1236:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COMMAND_REG = ((uint32)(mask << command));
 1621              		.loc 1 1236 0
 1622 0016 084B     		ldr	r3, .L107
 1623 0018 3A68     		ldr	r2, [r7]
 1624 001a 7968     		ldr	r1, [r7, #4]
 1625 001c 081C     		mov	r0, r1
 1626 001e 9040     		lsl	r0, r0, r2
 1627 0020 021C     		mov	r2, r0
 1628 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/TCPWM.c **** 
1238:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1629              		.loc 1 1238 0
 1630 0024 3B1C     		mov	r3, r7
 1631 0026 0F33     		add	r3, r3, #15
 1632 0028 1B78     		ldrb	r3, [r3]
 1633 002a 181C     		mov	r0, r3
 1634 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/TCPWM.c **** }
 1635              		.loc 1 1239 0
 1636 0030 BD46     		mov	sp, r7
 1637 0032 05B0     		add	sp, sp, #20
 1638              		@ sp needed
 1639 0034 90BD     		pop	{r4, r7, pc}
 1640              	.L108:
 1641 0036 C046     		.align	2
 1642              	.L107:
 1643 0038 08002040 		.word	1075838984
 1644              		.cfi_endproc
 1645              	.LFE35:
 1646              		.size	TCPWM_TriggerCommand, .-TCPWM_TriggerCommand
 1647              		.section	.text.TCPWM_ReadStatus,"ax",%progbits
 1648              		.align	2
 1649              		.global	TCPWM_ReadStatus
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	TCPWM_ReadStatus, %function
 1653              	TCPWM_ReadStatus:
 1654              	.LFB36:
1240:.\Generated_Source\PSoC4/TCPWM.c **** 
1241:.\Generated_Source\PSoC4/TCPWM.c **** 
1242:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadStatus
1244:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/TCPWM.c **** *
1246:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the status of the TCPWM.
1248:.\Generated_Source\PSoC4/TCPWM.c **** *
1249:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1251:.\Generated_Source\PSoC4/TCPWM.c **** *
1252:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1253:.\Generated_Source\PSoC4/TCPWM.c **** *  Status
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 52


1254:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/TCPWM.c **** *
1258:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/TCPWM.c **** {
 1655              		.loc 1 1260 0
 1656              		.cfi_startproc
 1657 0000 80B5     		push	{r7, lr}
 1658              		.cfi_def_cfa_offset 8
 1659              		.cfi_offset 7, -8
 1660              		.cfi_offset 14, -4
 1661 0002 00AF     		add	r7, sp, #0
 1662              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/TCPWM.c ****     return ((TCPWM_STATUS_REG >> TCPWM_RUNNING_STATUS_SHIFT) |
 1663              		.loc 1 1261 0
 1664 0004 054B     		ldr	r3, .L111
 1665 0006 1B68     		ldr	r3, [r3]
 1666 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/TCPWM.c ****             (TCPWM_STATUS_REG & TCPWM_STATUS_DOWN));
 1667              		.loc 1 1262 0
 1668 000a 044B     		ldr	r3, .L111
 1669 000c 1968     		ldr	r1, [r3]
 1670 000e 0123     		mov	r3, #1
 1671 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/TCPWM.c ****     return ((TCPWM_STATUS_REG >> TCPWM_RUNNING_STATUS_SHIFT) |
 1672              		.loc 1 1261 0
 1673 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/TCPWM.c **** }
 1674              		.loc 1 1263 0
 1675 0014 181C     		mov	r0, r3
 1676 0016 BD46     		mov	sp, r7
 1677              		@ sp needed
 1678 0018 80BD     		pop	{r7, pc}
 1679              	.L112:
 1680 001a C046     		.align	2
 1681              	.L111:
 1682 001c 04012040 		.word	1075839236
 1683              		.cfi_endproc
 1684              	.LFE36:
 1685              		.size	TCPWM_ReadStatus, .-TCPWM_ReadStatus
 1686              		.section	.text.TCPWM_SetInterruptMode,"ax",%progbits
 1687              		.align	2
 1688              		.global	TCPWM_SetInterruptMode
 1689              		.code	16
 1690              		.thumb_func
 1691              		.type	TCPWM_SetInterruptMode, %function
 1692              	TCPWM_SetInterruptMode:
 1693              	.LFB37:
1264:.\Generated_Source\PSoC4/TCPWM.c **** 
1265:.\Generated_Source\PSoC4/TCPWM.c **** 
1266:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/TCPWM.c **** *
1270:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 53


1271:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/TCPWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/TCPWM.c **** *
1274:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1277:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/TCPWM.c **** *
1280:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1281:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1282:.\Generated_Source\PSoC4/TCPWM.c **** *
1283:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/TCPWM.c **** {
 1694              		.loc 1 1285 0
 1695              		.cfi_startproc
 1696 0000 80B5     		push	{r7, lr}
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 7, -8
 1699              		.cfi_offset 14, -4
 1700 0002 82B0     		sub	sp, sp, #8
 1701              		.cfi_def_cfa_offset 16
 1702 0004 00AF     		add	r7, sp, #0
 1703              		.cfi_def_cfa_register 7
 1704 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_MASK_REG =  interruptMask;
 1705              		.loc 1 1286 0
 1706 0008 024B     		ldr	r3, .L114
 1707 000a 7A68     		ldr	r2, [r7, #4]
 1708 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/TCPWM.c **** }
 1709              		.loc 1 1287 0
 1710 000e BD46     		mov	sp, r7
 1711 0010 02B0     		add	sp, sp, #8
 1712              		@ sp needed
 1713 0012 80BD     		pop	{r7, pc}
 1714              	.L115:
 1715              		.align	2
 1716              	.L114:
 1717 0014 38012040 		.word	1075839288
 1718              		.cfi_endproc
 1719              	.LFE37:
 1720              		.size	TCPWM_SetInterruptMode, .-TCPWM_SetInterruptMode
 1721              		.section	.text.TCPWM_GetInterruptSourceMasked,"ax",%progbits
 1722              		.align	2
 1723              		.global	TCPWM_GetInterruptSourceMasked
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	TCPWM_GetInterruptSourceMasked, %function
 1727              	TCPWM_GetInterruptSourceMasked:
 1728              	.LFB38:
1288:.\Generated_Source\PSoC4/TCPWM.c **** 
1289:.\Generated_Source\PSoC4/TCPWM.c **** 
1290:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 54


1293:.\Generated_Source\PSoC4/TCPWM.c **** *
1294:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/TCPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/TCPWM.c **** *
1297:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/TCPWM.c **** *   None
1299:.\Generated_Source\PSoC4/TCPWM.c **** *
1300:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1301:.\Generated_Source\PSoC4/TCPWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/TCPWM.c **** *
1306:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/TCPWM.c **** {
 1729              		.loc 1 1308 0
 1730              		.cfi_startproc
 1731 0000 80B5     		push	{r7, lr}
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 00AF     		add	r7, sp, #0
 1736              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_INTERRUPT_MASKED_REG);
 1737              		.loc 1 1309 0
 1738 0004 024B     		ldr	r3, .L118
 1739 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/TCPWM.c **** }
 1740              		.loc 1 1310 0
 1741 0008 181C     		mov	r0, r3
 1742 000a BD46     		mov	sp, r7
 1743              		@ sp needed
 1744 000c 80BD     		pop	{r7, pc}
 1745              	.L119:
 1746 000e C046     		.align	2
 1747              	.L118:
 1748 0010 3C012040 		.word	1075839292
 1749              		.cfi_endproc
 1750              	.LFE38:
 1751              		.size	TCPWM_GetInterruptSourceMasked, .-TCPWM_GetInterruptSourceMasked
 1752              		.section	.text.TCPWM_GetInterruptSource,"ax",%progbits
 1753              		.align	2
 1754              		.global	TCPWM_GetInterruptSource
 1755              		.code	16
 1756              		.thumb_func
 1757              		.type	TCPWM_GetInterruptSource, %function
 1758              	TCPWM_GetInterruptSource:
 1759              	.LFB39:
1311:.\Generated_Source\PSoC4/TCPWM.c **** 
1312:.\Generated_Source\PSoC4/TCPWM.c **** 
1313:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/TCPWM.c **** *
1317:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/TCPWM.c **** *  Gets the interrupt requests (without masking).
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 55


1319:.\Generated_Source\PSoC4/TCPWM.c **** *
1320:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1322:.\Generated_Source\PSoC4/TCPWM.c **** *
1323:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1324:.\Generated_Source\PSoC4/TCPWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/TCPWM.c **** *
1329:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/TCPWM.c **** {
 1760              		.loc 1 1331 0
 1761              		.cfi_startproc
 1762 0000 80B5     		push	{r7, lr}
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 7, -8
 1765              		.cfi_offset 14, -4
 1766 0002 00AF     		add	r7, sp, #0
 1767              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_INTERRUPT_REQ_REG);
 1768              		.loc 1 1332 0
 1769 0004 024B     		ldr	r3, .L122
 1770 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/TCPWM.c **** }
 1771              		.loc 1 1333 0
 1772 0008 181C     		mov	r0, r3
 1773 000a BD46     		mov	sp, r7
 1774              		@ sp needed
 1775 000c 80BD     		pop	{r7, pc}
 1776              	.L123:
 1777 000e C046     		.align	2
 1778              	.L122:
 1779 0010 30012040 		.word	1075839280
 1780              		.cfi_endproc
 1781              	.LFE39:
 1782              		.size	TCPWM_GetInterruptSource, .-TCPWM_GetInterruptSource
 1783              		.section	.text.TCPWM_ClearInterrupt,"ax",%progbits
 1784              		.align	2
 1785              		.global	TCPWM_ClearInterrupt
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	TCPWM_ClearInterrupt, %function
 1789              	TCPWM_ClearInterrupt:
 1790              	.LFB40:
1334:.\Generated_Source\PSoC4/TCPWM.c **** 
1335:.\Generated_Source\PSoC4/TCPWM.c **** 
1336:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/TCPWM.c **** *
1340:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/TCPWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/TCPWM.c **** *
1343:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of interrupts to clear
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 56


1345:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/TCPWM.c **** *
1349:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1350:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1351:.\Generated_Source\PSoC4/TCPWM.c **** *
1352:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/TCPWM.c **** {
 1791              		.loc 1 1354 0
 1792              		.cfi_startproc
 1793 0000 80B5     		push	{r7, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
 1797 0002 82B0     		sub	sp, sp, #8
 1798              		.cfi_def_cfa_offset 16
 1799 0004 00AF     		add	r7, sp, #0
 1800              		.cfi_def_cfa_register 7
 1801 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_REQ_REG = interruptMask;
 1802              		.loc 1 1355 0
 1803 0008 024B     		ldr	r3, .L125
 1804 000a 7A68     		ldr	r2, [r7, #4]
 1805 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/TCPWM.c **** }
 1806              		.loc 1 1356 0
 1807 000e BD46     		mov	sp, r7
 1808 0010 02B0     		add	sp, sp, #8
 1809              		@ sp needed
 1810 0012 80BD     		pop	{r7, pc}
 1811              	.L126:
 1812              		.align	2
 1813              	.L125:
 1814 0014 30012040 		.word	1075839280
 1815              		.cfi_endproc
 1816              	.LFE40:
 1817              		.size	TCPWM_ClearInterrupt, .-TCPWM_ClearInterrupt
 1818              		.section	.text.TCPWM_SetInterrupt,"ax",%progbits
 1819              		.align	2
 1820              		.global	TCPWM_SetInterrupt
 1821              		.code	16
 1822              		.thumb_func
 1823              		.type	TCPWM_SetInterrupt, %function
 1824              	TCPWM_SetInterrupt:
 1825              	.LFB41:
1357:.\Generated_Source\PSoC4/TCPWM.c **** 
1358:.\Generated_Source\PSoC4/TCPWM.c **** 
1359:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetInterrupt
1361:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/TCPWM.c **** *
1363:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/TCPWM.c **** *
1366:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 57


1367:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/TCPWM.c **** *
1372:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1373:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1374:.\Generated_Source\PSoC4/TCPWM.c **** *
1375:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/TCPWM.c **** {
 1826              		.loc 1 1377 0
 1827              		.cfi_startproc
 1828 0000 80B5     		push	{r7, lr}
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 7, -8
 1831              		.cfi_offset 14, -4
 1832 0002 82B0     		sub	sp, sp, #8
 1833              		.cfi_def_cfa_offset 16
 1834 0004 00AF     		add	r7, sp, #0
 1835              		.cfi_def_cfa_register 7
 1836 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_SET_REG = interruptMask;
 1837              		.loc 1 1378 0
 1838 0008 024B     		ldr	r3, .L128
 1839 000a 7A68     		ldr	r2, [r7, #4]
 1840 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/TCPWM.c **** }
 1841              		.loc 1 1379 0
 1842 000e BD46     		mov	sp, r7
 1843 0010 02B0     		add	sp, sp, #8
 1844              		@ sp needed
 1845 0012 80BD     		pop	{r7, pc}
 1846              	.L129:
 1847              		.align	2
 1848              	.L128:
 1849 0014 34012040 		.word	1075839284
 1850              		.cfi_endproc
 1851              	.LFE41:
 1852              		.size	TCPWM_SetInterrupt, .-TCPWM_SetInterrupt
 1853              		.text
 1854              	.Letext0:
 1855              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1856              		.section	.debug_info,"",%progbits
 1857              	.Ldebug_info0:
 1858 0000 EC060000 		.4byte	0x6ec
 1859 0004 0400     		.2byte	0x4
 1860 0006 00000000 		.4byte	.Ldebug_abbrev0
 1861 000a 04       		.byte	0x4
 1862 000b 01       		.uleb128 0x1
 1863 000c 8F030000 		.4byte	.LASF76
 1864 0010 01       		.byte	0x1
 1865 0011 2E000000 		.4byte	.LASF77
 1866 0015 98000000 		.4byte	.LASF78
 1867 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1868 001d 00000000 		.4byte	0
 1869 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 58


 1870 0025 02       		.uleb128 0x2
 1871 0026 01       		.byte	0x1
 1872 0027 06       		.byte	0x6
 1873 0028 FA000000 		.4byte	.LASF0
 1874 002c 02       		.uleb128 0x2
 1875 002d 01       		.byte	0x1
 1876 002e 08       		.byte	0x8
 1877 002f 41040000 		.4byte	.LASF1
 1878 0033 02       		.uleb128 0x2
 1879 0034 02       		.byte	0x2
 1880 0035 05       		.byte	0x5
 1881 0036 60040000 		.4byte	.LASF2
 1882 003a 02       		.uleb128 0x2
 1883 003b 02       		.byte	0x2
 1884 003c 07       		.byte	0x7
 1885 003d 42020000 		.4byte	.LASF3
 1886 0041 02       		.uleb128 0x2
 1887 0042 04       		.byte	0x4
 1888 0043 05       		.byte	0x5
 1889 0044 1B010000 		.4byte	.LASF4
 1890 0048 02       		.uleb128 0x2
 1891 0049 04       		.byte	0x4
 1892 004a 07       		.byte	0x7
 1893 004b 27020000 		.4byte	.LASF5
 1894 004f 02       		.uleb128 0x2
 1895 0050 08       		.byte	0x8
 1896 0051 05       		.byte	0x5
 1897 0052 EC000000 		.4byte	.LASF6
 1898 0056 02       		.uleb128 0x2
 1899 0057 08       		.byte	0x8
 1900 0058 07       		.byte	0x7
 1901 0059 67000000 		.4byte	.LASF7
 1902 005d 03       		.uleb128 0x3
 1903 005e 04       		.byte	0x4
 1904 005f 05       		.byte	0x5
 1905 0060 696E7400 		.ascii	"int\000"
 1906 0064 02       		.uleb128 0x2
 1907 0065 04       		.byte	0x4
 1908 0066 07       		.byte	0x7
 1909 0067 CC010000 		.4byte	.LASF8
 1910 006b 04       		.uleb128 0x4
 1911 006c 32010000 		.4byte	.LASF9
 1912 0070 02       		.byte	0x2
 1913 0071 A1       		.byte	0xa1
 1914 0072 2C000000 		.4byte	0x2c
 1915 0076 04       		.uleb128 0x4
 1916 0077 68010000 		.4byte	.LASF10
 1917 007b 02       		.byte	0x2
 1918 007c A3       		.byte	0xa3
 1919 007d 48000000 		.4byte	0x48
 1920 0081 02       		.uleb128 0x2
 1921 0082 04       		.byte	0x4
 1922 0083 04       		.byte	0x4
 1923 0084 6C030000 		.4byte	.LASF11
 1924 0088 02       		.uleb128 0x2
 1925 0089 08       		.byte	0x8
 1926 008a 04       		.byte	0x4
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 59


 1927 008b 4E010000 		.4byte	.LASF12
 1928 008f 02       		.uleb128 0x2
 1929 0090 01       		.byte	0x1
 1930 0091 08       		.byte	0x8
 1931 0092 C4040000 		.4byte	.LASF13
 1932 0096 05       		.uleb128 0x5
 1933 0097 E1020000 		.4byte	.LASF14
 1934 009b 02       		.byte	0x2
 1935 009c 4D01     		.2byte	0x14d
 1936 009e A2000000 		.4byte	0xa2
 1937 00a2 06       		.uleb128 0x6
 1938 00a3 76000000 		.4byte	0x76
 1939 00a7 02       		.uleb128 0x2
 1940 00a8 04       		.byte	0x4
 1941 00a9 07       		.byte	0x7
 1942 00aa 0E030000 		.4byte	.LASF15
 1943 00ae 07       		.uleb128 0x7
 1944 00af 9E010000 		.4byte	.LASF16
 1945 00b3 01       		.byte	0x1
 1946 00b4 26       		.byte	0x26
 1947 00b5 00000000 		.4byte	.LFB2
 1948 00b9 08000000 		.4byte	.LFE2-.LFB2
 1949 00bd 01       		.uleb128 0x1
 1950 00be 9C       		.byte	0x9c
 1951 00bf 08       		.uleb128 0x8
 1952 00c0 55020000 		.4byte	.LASF18
 1953 00c4 01       		.byte	0x1
 1954 00c5 B1       		.byte	0xb1
 1955 00c6 00000000 		.4byte	.LFB3
 1956 00ca 30000000 		.4byte	.LFE3-.LFB3
 1957 00ce 01       		.uleb128 0x1
 1958 00cf 9C       		.byte	0x9c
 1959 00d0 E3000000 		.4byte	0xe3
 1960 00d4 09       		.uleb128 0x9
 1961 00d5 0D050000 		.4byte	.LASF20
 1962 00d9 01       		.byte	0x1
 1963 00da B3       		.byte	0xb3
 1964 00db 6B000000 		.4byte	0x6b
 1965 00df 02       		.uleb128 0x2
 1966 00e0 91       		.byte	0x91
 1967 00e1 6F       		.sleb128 -17
 1968 00e2 00       		.byte	0
 1969 00e3 0A       		.uleb128 0xa
 1970 00e4 78040000 		.4byte	.LASF17
 1971 00e8 01       		.byte	0x1
 1972 00e9 E0       		.byte	0xe0
 1973 00ea 00000000 		.4byte	.LFB4
 1974 00ee 24000000 		.4byte	.LFE4-.LFB4
 1975 00f2 01       		.uleb128 0x1
 1976 00f3 9C       		.byte	0x9c
 1977 00f4 08       		.uleb128 0x8
 1978 00f5 1E050000 		.4byte	.LASF19
 1979 00f9 01       		.byte	0x1
 1980 00fa FA       		.byte	0xfa
 1981 00fb 00000000 		.4byte	.LFB5
 1982 00ff 30000000 		.4byte	.LFE5-.LFB5
 1983 0103 01       		.uleb128 0x1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 60


 1984 0104 9C       		.byte	0x9c
 1985 0105 18010000 		.4byte	0x118
 1986 0109 09       		.uleb128 0x9
 1987 010a 0D050000 		.4byte	.LASF20
 1988 010e 01       		.byte	0x1
 1989 010f FC       		.byte	0xfc
 1990 0110 6B000000 		.4byte	0x6b
 1991 0114 02       		.uleb128 0x2
 1992 0115 91       		.byte	0x91
 1993 0116 6F       		.sleb128 -17
 1994 0117 00       		.byte	0
 1995 0118 0B       		.uleb128 0xb
 1996 0119 1E040000 		.4byte	.LASF21
 1997 011d 01       		.byte	0x1
 1998 011e 1F01     		.2byte	0x11f
 1999 0120 00000000 		.4byte	.LFB6
 2000 0124 48000000 		.4byte	.LFE6-.LFB6
 2001 0128 01       		.uleb128 0x1
 2002 0129 9C       		.byte	0x9c
 2003 012a 4D010000 		.4byte	0x14d
 2004 012e 0C       		.uleb128 0xc
 2005 012f DE040000 		.4byte	.LASF23
 2006 0133 01       		.byte	0x1
 2007 0134 1F01     		.2byte	0x11f
 2008 0136 76000000 		.4byte	0x76
 2009 013a 02       		.uleb128 0x2
 2010 013b 91       		.byte	0x91
 2011 013c 64       		.sleb128 -28
 2012 013d 0D       		.uleb128 0xd
 2013 013e 0D050000 		.4byte	.LASF20
 2014 0142 01       		.byte	0x1
 2015 0143 2101     		.2byte	0x121
 2016 0145 6B000000 		.4byte	0x6b
 2017 0149 02       		.uleb128 0x2
 2018 014a 91       		.byte	0x91
 2019 014b 6F       		.sleb128 -17
 2020 014c 00       		.byte	0
 2021 014d 0B       		.uleb128 0xb
 2022 014e E7020000 		.4byte	.LASF22
 2023 0152 01       		.byte	0x1
 2024 0153 4001     		.2byte	0x140
 2025 0155 00000000 		.4byte	.LFB7
 2026 0159 48000000 		.4byte	.LFE7-.LFB7
 2027 015d 01       		.uleb128 0x1
 2028 015e 9C       		.byte	0x9c
 2029 015f 82010000 		.4byte	0x182
 2030 0163 0C       		.uleb128 0xc
 2031 0164 7E000000 		.4byte	.LASF24
 2032 0168 01       		.byte	0x1
 2033 0169 4001     		.2byte	0x140
 2034 016b 76000000 		.4byte	0x76
 2035 016f 02       		.uleb128 0x2
 2036 0170 91       		.byte	0x91
 2037 0171 64       		.sleb128 -28
 2038 0172 0D       		.uleb128 0xd
 2039 0173 0D050000 		.4byte	.LASF20
 2040 0177 01       		.byte	0x1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 61


 2041 0178 4201     		.2byte	0x142
 2042 017a 6B000000 		.4byte	0x6b
 2043 017e 02       		.uleb128 0x2
 2044 017f 91       		.byte	0x91
 2045 0180 6F       		.sleb128 -17
 2046 0181 00       		.byte	0
 2047 0182 0B       		.uleb128 0xb
 2048 0183 E3040000 		.4byte	.LASF25
 2049 0187 01       		.byte	0x1
 2050 0188 6501     		.2byte	0x165
 2051 018a 00000000 		.4byte	.LFB8
 2052 018e 48000000 		.4byte	.LFE8-.LFB8
 2053 0192 01       		.uleb128 0x1
 2054 0193 9C       		.byte	0x9c
 2055 0194 B7010000 		.4byte	0x1b7
 2056 0198 0C       		.uleb128 0xc
 2057 0199 72030000 		.4byte	.LASF26
 2058 019d 01       		.byte	0x1
 2059 019e 6501     		.2byte	0x165
 2060 01a0 76000000 		.4byte	0x76
 2061 01a4 02       		.uleb128 0x2
 2062 01a5 91       		.byte	0x91
 2063 01a6 64       		.sleb128 -28
 2064 01a7 0D       		.uleb128 0xd
 2065 01a8 0D050000 		.4byte	.LASF20
 2066 01ac 01       		.byte	0x1
 2067 01ad 6701     		.2byte	0x167
 2068 01af 6B000000 		.4byte	0x6b
 2069 01b3 02       		.uleb128 0x2
 2070 01b4 91       		.byte	0x91
 2071 01b5 6F       		.sleb128 -17
 2072 01b6 00       		.byte	0
 2073 01b7 0B       		.uleb128 0xb
 2074 01b8 06000000 		.4byte	.LASF27
 2075 01bc 01       		.byte	0x1
 2076 01bd 8501     		.2byte	0x185
 2077 01bf 00000000 		.4byte	.LFB9
 2078 01c3 4C000000 		.4byte	.LFE9-.LFB9
 2079 01c7 01       		.uleb128 0x1
 2080 01c8 9C       		.byte	0x9c
 2081 01c9 EC010000 		.4byte	0x1ec
 2082 01cd 0C       		.uleb128 0xc
 2083 01ce 77020000 		.4byte	.LASF28
 2084 01d2 01       		.byte	0x1
 2085 01d3 8501     		.2byte	0x185
 2086 01d5 76000000 		.4byte	0x76
 2087 01d9 02       		.uleb128 0x2
 2088 01da 91       		.byte	0x91
 2089 01db 64       		.sleb128 -28
 2090 01dc 0D       		.uleb128 0xd
 2091 01dd 0D050000 		.4byte	.LASF20
 2092 01e1 01       		.byte	0x1
 2093 01e2 8701     		.2byte	0x187
 2094 01e4 6B000000 		.4byte	0x6b
 2095 01e8 02       		.uleb128 0x2
 2096 01e9 91       		.byte	0x91
 2097 01ea 6F       		.sleb128 -17
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 62


 2098 01eb 00       		.byte	0
 2099 01ec 0E       		.uleb128 0xe
 2100 01ed 99020000 		.4byte	.LASF29
 2101 01f1 01       		.byte	0x1
 2102 01f2 BB01     		.2byte	0x1bb
 2103 01f4 00000000 		.4byte	.LFB10
 2104 01f8 1C000000 		.4byte	.LFE10-.LFB10
 2105 01fc 01       		.uleb128 0x1
 2106 01fd 9C       		.byte	0x9c
 2107 01fe 12020000 		.4byte	0x212
 2108 0202 0C       		.uleb128 0xc
 2109 0203 39020000 		.4byte	.LASF30
 2110 0207 01       		.byte	0x1
 2111 0208 BB01     		.2byte	0x1bb
 2112 020a 76000000 		.4byte	0x76
 2113 020e 02       		.uleb128 0x2
 2114 020f 91       		.byte	0x91
 2115 0210 74       		.sleb128 -12
 2116 0211 00       		.byte	0
 2117 0212 0B       		.uleb128 0xb
 2118 0213 2C040000 		.4byte	.LASF31
 2119 0217 01       		.byte	0x1
 2120 0218 DF01     		.2byte	0x1df
 2121 021a 00000000 		.4byte	.LFB11
 2122 021e 48000000 		.4byte	.LFE11-.LFB11
 2123 0222 01       		.uleb128 0x1
 2124 0223 9C       		.byte	0x9c
 2125 0224 47020000 		.4byte	0x247
 2126 0228 0C       		.uleb128 0xc
 2127 0229 17030000 		.4byte	.LASF32
 2128 022d 01       		.byte	0x1
 2129 022e DF01     		.2byte	0x1df
 2130 0230 76000000 		.4byte	0x76
 2131 0234 02       		.uleb128 0x2
 2132 0235 91       		.byte	0x91
 2133 0236 64       		.sleb128 -28
 2134 0237 0D       		.uleb128 0xd
 2135 0238 0D050000 		.4byte	.LASF20
 2136 023c 01       		.byte	0x1
 2137 023d E101     		.2byte	0x1e1
 2138 023f 6B000000 		.4byte	0x6b
 2139 0243 02       		.uleb128 0x2
 2140 0244 91       		.byte	0x91
 2141 0245 6F       		.sleb128 -17
 2142 0246 00       		.byte	0
 2143 0247 0B       		.uleb128 0xb
 2144 0248 F7020000 		.4byte	.LASF33
 2145 024c 01       		.byte	0x1
 2146 024d 0102     		.2byte	0x201
 2147 024f 00000000 		.4byte	.LFB12
 2148 0253 48000000 		.4byte	.LFE12-.LFB12
 2149 0257 01       		.uleb128 0x1
 2150 0258 9C       		.byte	0x9c
 2151 0259 7C020000 		.4byte	0x27c
 2152 025d 0C       		.uleb128 0xc
 2153 025e 4F040000 		.4byte	.LASF34
 2154 0262 01       		.byte	0x1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 63


 2155 0263 0102     		.2byte	0x201
 2156 0265 76000000 		.4byte	0x76
 2157 0269 02       		.uleb128 0x2
 2158 026a 91       		.byte	0x91
 2159 026b 64       		.sleb128 -28
 2160 026c 0D       		.uleb128 0xd
 2161 026d 0D050000 		.4byte	.LASF20
 2162 0271 01       		.byte	0x1
 2163 0272 0302     		.2byte	0x203
 2164 0274 6B000000 		.4byte	0x6b
 2165 0278 02       		.uleb128 0x2
 2166 0279 91       		.byte	0x91
 2167 027a 6F       		.sleb128 -17
 2168 027b 00       		.byte	0
 2169 027c 0B       		.uleb128 0xb
 2170 027d 3E050000 		.4byte	.LASF35
 2171 0281 01       		.byte	0x1
 2172 0282 2202     		.2byte	0x222
 2173 0284 00000000 		.4byte	.LFB13
 2174 0288 4C000000 		.4byte	.LFE13-.LFB13
 2175 028c 01       		.uleb128 0x1
 2176 028d 9C       		.byte	0x9c
 2177 028e B1020000 		.4byte	0x2b1
 2178 0292 0C       		.uleb128 0xc
 2179 0293 C3010000 		.4byte	.LASF36
 2180 0297 01       		.byte	0x1
 2181 0298 2202     		.2byte	0x222
 2182 029a 76000000 		.4byte	0x76
 2183 029e 02       		.uleb128 0x2
 2184 029f 91       		.byte	0x91
 2185 02a0 64       		.sleb128 -28
 2186 02a1 0D       		.uleb128 0xd
 2187 02a2 0D050000 		.4byte	.LASF20
 2188 02a6 01       		.byte	0x1
 2189 02a7 2402     		.2byte	0x224
 2190 02a9 6B000000 		.4byte	0x6b
 2191 02ad 02       		.uleb128 0x2
 2192 02ae 91       		.byte	0x91
 2193 02af 6F       		.sleb128 -17
 2194 02b0 00       		.byte	0
 2195 02b1 0B       		.uleb128 0xb
 2196 02b2 7C030000 		.4byte	.LASF37
 2197 02b6 01       		.byte	0x1
 2198 02b7 4302     		.2byte	0x243
 2199 02b9 00000000 		.4byte	.LFB14
 2200 02bd 48000000 		.4byte	.LFE14-.LFB14
 2201 02c1 01       		.uleb128 0x1
 2202 02c2 9C       		.byte	0x9c
 2203 02c3 E6020000 		.4byte	0x2e6
 2204 02c7 0C       		.uleb128 0xc
 2205 02c8 BE010000 		.4byte	.LASF38
 2206 02cc 01       		.byte	0x1
 2207 02cd 4302     		.2byte	0x243
 2208 02cf 76000000 		.4byte	0x76
 2209 02d3 02       		.uleb128 0x2
 2210 02d4 91       		.byte	0x91
 2211 02d5 64       		.sleb128 -28
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 64


 2212 02d6 0D       		.uleb128 0xd
 2213 02d7 0D050000 		.4byte	.LASF20
 2214 02db 01       		.byte	0x1
 2215 02dc 4502     		.2byte	0x245
 2216 02de 6B000000 		.4byte	0x6b
 2217 02e2 02       		.uleb128 0x2
 2218 02e3 91       		.byte	0x91
 2219 02e4 6F       		.sleb128 -17
 2220 02e5 00       		.byte	0
 2221 02e6 0E       		.uleb128 0xe
 2222 02e7 CE020000 		.4byte	.LASF39
 2223 02eb 01       		.byte	0x1
 2224 02ec 6102     		.2byte	0x261
 2225 02ee 00000000 		.4byte	.LFB15
 2226 02f2 1C000000 		.4byte	.LFE15-.LFB15
 2227 02f6 01       		.uleb128 0x1
 2228 02f7 9C       		.byte	0x9c
 2229 02f8 0C030000 		.4byte	0x30c
 2230 02fc 0C       		.uleb128 0xc
 2231 02fd 00000000 		.4byte	.LASF40
 2232 0301 01       		.byte	0x1
 2233 0302 6102     		.2byte	0x261
 2234 0304 76000000 		.4byte	0x76
 2235 0308 02       		.uleb128 0x2
 2236 0309 91       		.byte	0x91
 2237 030a 74       		.sleb128 -12
 2238 030b 00       		.byte	0
 2239 030c 0F       		.uleb128 0xf
 2240 030d 6F010000 		.4byte	.LASF45
 2241 0311 01       		.byte	0x1
 2242 0312 7502     		.2byte	0x275
 2243 0314 76000000 		.4byte	0x76
 2244 0318 00000000 		.4byte	.LFB16
 2245 031c 18000000 		.4byte	.LFE16-.LFB16
 2246 0320 01       		.uleb128 0x1
 2247 0321 9C       		.byte	0x9c
 2248 0322 0B       		.uleb128 0xb
 2249 0323 A9010000 		.4byte	.LASF41
 2250 0327 01       		.byte	0x1
 2251 0328 9202     		.2byte	0x292
 2252 032a 00000000 		.4byte	.LFB17
 2253 032e 48000000 		.4byte	.LFE17-.LFB17
 2254 0332 01       		.uleb128 0x1
 2255 0333 9C       		.byte	0x9c
 2256 0334 57030000 		.4byte	0x357
 2257 0338 0C       		.uleb128 0xc
 2258 0339 F6040000 		.4byte	.LASF42
 2259 033d 01       		.byte	0x1
 2260 033e 9202     		.2byte	0x292
 2261 0340 76000000 		.4byte	0x76
 2262 0344 02       		.uleb128 0x2
 2263 0345 91       		.byte	0x91
 2264 0346 64       		.sleb128 -28
 2265 0347 0D       		.uleb128 0xd
 2266 0348 0D050000 		.4byte	.LASF20
 2267 034c 01       		.byte	0x1
 2268 034d 9402     		.2byte	0x294
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 65


 2269 034f 6B000000 		.4byte	0x6b
 2270 0353 02       		.uleb128 0x2
 2271 0354 91       		.byte	0x91
 2272 0355 6F       		.sleb128 -17
 2273 0356 00       		.byte	0
 2274 0357 0E       		.uleb128 0xe
 2275 0358 BC020000 		.4byte	.LASF43
 2276 035c 01       		.byte	0x1
 2277 035d AF02     		.2byte	0x2af
 2278 035f 00000000 		.4byte	.LFB18
 2279 0363 1C000000 		.4byte	.LFE18-.LFB18
 2280 0367 01       		.uleb128 0x1
 2281 0368 9C       		.byte	0x9c
 2282 0369 7D030000 		.4byte	0x37d
 2283 036d 0C       		.uleb128 0xc
 2284 036e 60000000 		.4byte	.LASF44
 2285 0372 01       		.byte	0x1
 2286 0373 AF02     		.2byte	0x2af
 2287 0375 76000000 		.4byte	0x76
 2288 0379 02       		.uleb128 0x2
 2289 037a 91       		.byte	0x91
 2290 037b 74       		.sleb128 -12
 2291 037c 00       		.byte	0
 2292 037d 0F       		.uleb128 0xf
 2293 037e 81010000 		.4byte	.LASF46
 2294 0382 01       		.byte	0x1
 2295 0383 C302     		.2byte	0x2c3
 2296 0385 76000000 		.4byte	0x76
 2297 0389 00000000 		.4byte	.LFB19
 2298 038d 18000000 		.4byte	.LFE19-.LFB19
 2299 0391 01       		.uleb128 0x1
 2300 0392 9C       		.byte	0x9c
 2301 0393 0B       		.uleb128 0xb
 2302 0394 4F030000 		.4byte	.LASF47
 2303 0398 01       		.byte	0x1
 2304 0399 DD02     		.2byte	0x2dd
 2305 039b 00000000 		.4byte	.LFB20
 2306 039f 48000000 		.4byte	.LFE20-.LFB20
 2307 03a3 01       		.uleb128 0x1
 2308 03a4 9C       		.byte	0x9c
 2309 03a5 C8030000 		.4byte	0x3c8
 2310 03a9 0C       		.uleb128 0xc
 2311 03aa 53050000 		.4byte	.LASF48
 2312 03ae 01       		.byte	0x1
 2313 03af DD02     		.2byte	0x2dd
 2314 03b1 76000000 		.4byte	0x76
 2315 03b5 02       		.uleb128 0x2
 2316 03b6 91       		.byte	0x91
 2317 03b7 64       		.sleb128 -28
 2318 03b8 0D       		.uleb128 0xd
 2319 03b9 0D050000 		.4byte	.LASF20
 2320 03bd 01       		.byte	0x1
 2321 03be DF02     		.2byte	0x2df
 2322 03c0 6B000000 		.4byte	0x6b
 2323 03c4 02       		.uleb128 0x2
 2324 03c5 91       		.byte	0x91
 2325 03c6 6F       		.sleb128 -17
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 66


 2326 03c7 00       		.byte	0
 2327 03c8 0E       		.uleb128 0xe
 2328 03c9 29050000 		.4byte	.LASF49
 2329 03cd 01       		.byte	0x1
 2330 03ce F802     		.2byte	0x2f8
 2331 03d0 00000000 		.4byte	.LFB21
 2332 03d4 1C000000 		.4byte	.LFE21-.LFB21
 2333 03d8 01       		.uleb128 0x1
 2334 03d9 9C       		.byte	0x9c
 2335 03da EE030000 		.4byte	0x3ee
 2336 03de 0C       		.uleb128 0xc
 2337 03df 5E050000 		.4byte	.LASF50
 2338 03e3 01       		.byte	0x1
 2339 03e4 F802     		.2byte	0x2f8
 2340 03e6 76000000 		.4byte	0x76
 2341 03ea 02       		.uleb128 0x2
 2342 03eb 91       		.byte	0x91
 2343 03ec 74       		.sleb128 -12
 2344 03ed 00       		.byte	0
 2345 03ee 0F       		.uleb128 0xf
 2346 03ef 85020000 		.4byte	.LASF51
 2347 03f3 01       		.byte	0x1
 2348 03f4 0C03     		.2byte	0x30c
 2349 03f6 76000000 		.4byte	0x76
 2350 03fa 00000000 		.4byte	.LFB22
 2351 03fe 18000000 		.4byte	.LFE22-.LFB22
 2352 0402 01       		.uleb128 0x1
 2353 0403 9C       		.byte	0x9c
 2354 0404 0B       		.uleb128 0xb
 2355 0405 13020000 		.4byte	.LASF52
 2356 0409 01       		.byte	0x1
 2357 040a 2603     		.2byte	0x326
 2358 040c 00000000 		.4byte	.LFB23
 2359 0410 48000000 		.4byte	.LFE23-.LFB23
 2360 0414 01       		.uleb128 0x1
 2361 0415 9C       		.byte	0x9c
 2362 0416 39040000 		.4byte	0x439
 2363 041a 0C       		.uleb128 0xc
 2364 041b 53050000 		.4byte	.LASF48
 2365 041f 01       		.byte	0x1
 2366 0420 2603     		.2byte	0x326
 2367 0422 76000000 		.4byte	0x76
 2368 0426 02       		.uleb128 0x2
 2369 0427 91       		.byte	0x91
 2370 0428 64       		.sleb128 -28
 2371 0429 0D       		.uleb128 0xd
 2372 042a 0D050000 		.4byte	.LASF20
 2373 042e 01       		.byte	0x1
 2374 042f 2803     		.2byte	0x328
 2375 0431 6B000000 		.4byte	0x6b
 2376 0435 02       		.uleb128 0x2
 2377 0436 91       		.byte	0x91
 2378 0437 6F       		.sleb128 -17
 2379 0438 00       		.byte	0
 2380 0439 0E       		.uleb128 0xe
 2381 043a D9010000 		.4byte	.LASF53
 2382 043e 01       		.byte	0x1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 67


 2383 043f 4303     		.2byte	0x343
 2384 0441 00000000 		.4byte	.LFB24
 2385 0445 1C000000 		.4byte	.LFE24-.LFB24
 2386 0449 01       		.uleb128 0x1
 2387 044a 9C       		.byte	0x9c
 2388 044b 5F040000 		.4byte	0x45f
 2389 044f 0C       		.uleb128 0xc
 2390 0450 64030000 		.4byte	.LASF54
 2391 0454 01       		.byte	0x1
 2392 0455 4303     		.2byte	0x343
 2393 0457 76000000 		.4byte	0x76
 2394 045b 02       		.uleb128 0x2
 2395 045c 91       		.byte	0x91
 2396 045d 74       		.sleb128 -12
 2397 045e 00       		.byte	0
 2398 045f 0F       		.uleb128 0xf
 2399 0460 DA000000 		.4byte	.LASF55
 2400 0464 01       		.byte	0x1
 2401 0465 6E03     		.2byte	0x36e
 2402 0467 76000000 		.4byte	0x76
 2403 046b 00000000 		.4byte	.LFB25
 2404 046f 18000000 		.4byte	.LFE25-.LFB25
 2405 0473 01       		.uleb128 0x1
 2406 0474 9C       		.byte	0x9c
 2407 0475 0E       		.uleb128 0xe
 2408 0476 38010000 		.4byte	.LASF56
 2409 047a 01       		.byte	0x1
 2410 047b 9C03     		.2byte	0x39c
 2411 047d 00000000 		.4byte	.LFB26
 2412 0481 1C000000 		.4byte	.LFE26-.LFB26
 2413 0485 01       		.uleb128 0x1
 2414 0486 9C       		.byte	0x9c
 2415 0487 9B040000 		.4byte	0x49b
 2416 048b 0C       		.uleb128 0xc
 2417 048c 02050000 		.4byte	.LASF57
 2418 0490 01       		.byte	0x1
 2419 0491 9C03     		.2byte	0x39c
 2420 0493 76000000 		.4byte	0x76
 2421 0497 02       		.uleb128 0x2
 2422 0498 91       		.byte	0x91
 2423 0499 74       		.sleb128 -12
 2424 049a 00       		.byte	0
 2425 049b 0F       		.uleb128 0xf
 2426 049c 3A030000 		.4byte	.LASF58
 2427 04a0 01       		.byte	0x1
 2428 04a1 C503     		.2byte	0x3c5
 2429 04a3 76000000 		.4byte	0x76
 2430 04a7 00000000 		.4byte	.LFB27
 2431 04ab 18000000 		.4byte	.LFE27-.LFB27
 2432 04af 01       		.uleb128 0x1
 2433 04b0 9C       		.byte	0x9c
 2434 04b1 0F       		.uleb128 0xf
 2435 04b2 99040000 		.4byte	.LASF59
 2436 04b6 01       		.byte	0x1
 2437 04b7 F303     		.2byte	0x3f3
 2438 04b9 76000000 		.4byte	0x76
 2439 04bd 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 68


 2440 04c1 18000000 		.4byte	.LFE28-.LFB28
 2441 04c5 01       		.uleb128 0x1
 2442 04c6 9C       		.byte	0x9c
 2443 04c7 0F       		.uleb128 0xf
 2444 04c8 06010000 		.4byte	.LASF60
 2445 04cc 01       		.byte	0x1
 2446 04cd 0804     		.2byte	0x408
 2447 04cf 76000000 		.4byte	0x76
 2448 04d3 00000000 		.4byte	.LFB29
 2449 04d7 18000000 		.4byte	.LFE29-.LFB29
 2450 04db 01       		.uleb128 0x1
 2451 04dc 9C       		.byte	0x9c
 2452 04dd 0B       		.uleb128 0xb
 2453 04de 62020000 		.4byte	.LASF61
 2454 04e2 01       		.byte	0x1
 2455 04e3 2304     		.2byte	0x423
 2456 04e5 00000000 		.4byte	.LFB30
 2457 04e9 44000000 		.4byte	.LFE30-.LFB30
 2458 04ed 01       		.uleb128 0x1
 2459 04ee 9C       		.byte	0x9c
 2460 04ef 12050000 		.4byte	0x512
 2461 04f3 0C       		.uleb128 0xc
 2462 04f4 92010000 		.4byte	.LASF62
 2463 04f8 01       		.byte	0x1
 2464 04f9 2304     		.2byte	0x423
 2465 04fb 76000000 		.4byte	0x76
 2466 04ff 02       		.uleb128 0x2
 2467 0500 91       		.byte	0x91
 2468 0501 64       		.sleb128 -28
 2469 0502 0D       		.uleb128 0xd
 2470 0503 0D050000 		.4byte	.LASF20
 2471 0507 01       		.byte	0x1
 2472 0508 2504     		.2byte	0x425
 2473 050a 6B000000 		.4byte	0x6b
 2474 050e 02       		.uleb128 0x2
 2475 050f 91       		.byte	0x91
 2476 0510 6F       		.sleb128 -17
 2477 0511 00       		.byte	0
 2478 0512 0B       		.uleb128 0xb
 2479 0513 26030000 		.4byte	.LASF63
 2480 0517 01       		.byte	0x1
 2481 0518 4404     		.2byte	0x444
 2482 051a 00000000 		.4byte	.LFB31
 2483 051e 44000000 		.4byte	.LFE31-.LFB31
 2484 0522 01       		.uleb128 0x1
 2485 0523 9C       		.byte	0x9c
 2486 0524 47050000 		.4byte	0x547
 2487 0528 0C       		.uleb128 0xc
 2488 0529 92010000 		.4byte	.LASF62
 2489 052d 01       		.byte	0x1
 2490 052e 4404     		.2byte	0x444
 2491 0530 76000000 		.4byte	0x76
 2492 0534 02       		.uleb128 0x2
 2493 0535 91       		.byte	0x91
 2494 0536 64       		.sleb128 -28
 2495 0537 0D       		.uleb128 0xd
 2496 0538 0D050000 		.4byte	.LASF20
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 69


 2497 053c 01       		.byte	0x1
 2498 053d 4604     		.2byte	0x446
 2499 053f 6B000000 		.4byte	0x6b
 2500 0543 02       		.uleb128 0x2
 2501 0544 91       		.byte	0x91
 2502 0545 6F       		.sleb128 -17
 2503 0546 00       		.byte	0
 2504 0547 0B       		.uleb128 0xb
 2505 0548 0B040000 		.4byte	.LASF64
 2506 054c 01       		.byte	0x1
 2507 054d 6504     		.2byte	0x465
 2508 054f 00000000 		.4byte	.LFB32
 2509 0553 48000000 		.4byte	.LFE32-.LFB32
 2510 0557 01       		.uleb128 0x1
 2511 0558 9C       		.byte	0x9c
 2512 0559 7C050000 		.4byte	0x57c
 2513 055d 0C       		.uleb128 0xc
 2514 055e 92010000 		.4byte	.LASF62
 2515 0562 01       		.byte	0x1
 2516 0563 6504     		.2byte	0x465
 2517 0565 76000000 		.4byte	0x76
 2518 0569 02       		.uleb128 0x2
 2519 056a 91       		.byte	0x91
 2520 056b 64       		.sleb128 -28
 2521 056c 0D       		.uleb128 0xd
 2522 056d 0D050000 		.4byte	.LASF20
 2523 0571 01       		.byte	0x1
 2524 0572 6704     		.2byte	0x467
 2525 0574 6B000000 		.4byte	0x6b
 2526 0578 02       		.uleb128 0x2
 2527 0579 91       		.byte	0x91
 2528 057a 6F       		.sleb128 -17
 2529 057b 00       		.byte	0
 2530 057c 0B       		.uleb128 0xb
 2531 057d AA020000 		.4byte	.LASF65
 2532 0581 01       		.byte	0x1
 2533 0582 8504     		.2byte	0x485
 2534 0584 00000000 		.4byte	.LFB33
 2535 0588 44000000 		.4byte	.LFE33-.LFB33
 2536 058c 01       		.uleb128 0x1
 2537 058d 9C       		.byte	0x9c
 2538 058e B1050000 		.4byte	0x5b1
 2539 0592 0C       		.uleb128 0xc
 2540 0593 92010000 		.4byte	.LASF62
 2541 0597 01       		.byte	0x1
 2542 0598 8504     		.2byte	0x485
 2543 059a 76000000 		.4byte	0x76
 2544 059e 02       		.uleb128 0x2
 2545 059f 91       		.byte	0x91
 2546 05a0 64       		.sleb128 -28
 2547 05a1 0D       		.uleb128 0xd
 2548 05a2 0D050000 		.4byte	.LASF20
 2549 05a6 01       		.byte	0x1
 2550 05a7 8704     		.2byte	0x487
 2551 05a9 6B000000 		.4byte	0x6b
 2552 05ad 02       		.uleb128 0x2
 2553 05ae 91       		.byte	0x91
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 70


 2554 05af 6F       		.sleb128 -17
 2555 05b0 00       		.byte	0
 2556 05b1 0B       		.uleb128 0xb
 2557 05b2 55010000 		.4byte	.LASF66
 2558 05b6 01       		.byte	0x1
 2559 05b7 A604     		.2byte	0x4a6
 2560 05b9 00000000 		.4byte	.LFB34
 2561 05bd 44000000 		.4byte	.LFE34-.LFB34
 2562 05c1 01       		.uleb128 0x1
 2563 05c2 9C       		.byte	0x9c
 2564 05c3 E6050000 		.4byte	0x5e6
 2565 05c7 0C       		.uleb128 0xc
 2566 05c8 92010000 		.4byte	.LASF62
 2567 05cc 01       		.byte	0x1
 2568 05cd A604     		.2byte	0x4a6
 2569 05cf 76000000 		.4byte	0x76
 2570 05d3 02       		.uleb128 0x2
 2571 05d4 91       		.byte	0x91
 2572 05d5 64       		.sleb128 -28
 2573 05d6 0D       		.uleb128 0xd
 2574 05d7 0D050000 		.4byte	.LASF20
 2575 05db 01       		.byte	0x1
 2576 05dc A804     		.2byte	0x4a8
 2577 05de 6B000000 		.4byte	0x6b
 2578 05e2 02       		.uleb128 0x2
 2579 05e3 91       		.byte	0x91
 2580 05e4 6F       		.sleb128 -17
 2581 05e5 00       		.byte	0
 2582 05e6 0B       		.uleb128 0xb
 2583 05e7 84040000 		.4byte	.LASF67
 2584 05eb 01       		.byte	0x1
 2585 05ec CE04     		.2byte	0x4ce
 2586 05ee 00000000 		.4byte	.LFB35
 2587 05f2 3C000000 		.4byte	.LFE35-.LFB35
 2588 05f6 01       		.uleb128 0x1
 2589 05f7 9C       		.byte	0x9c
 2590 05f8 2A060000 		.4byte	0x62a
 2591 05fc 0C       		.uleb128 0xc
 2592 05fd BE010000 		.4byte	.LASF38
 2593 0601 01       		.byte	0x1
 2594 0602 CE04     		.2byte	0x4ce
 2595 0604 76000000 		.4byte	0x76
 2596 0608 02       		.uleb128 0x2
 2597 0609 91       		.byte	0x91
 2598 060a 64       		.sleb128 -28
 2599 060b 0C       		.uleb128 0xc
 2600 060c 0B020000 		.4byte	.LASF68
 2601 0610 01       		.byte	0x1
 2602 0611 CE04     		.2byte	0x4ce
 2603 0613 76000000 		.4byte	0x76
 2604 0617 02       		.uleb128 0x2
 2605 0618 91       		.byte	0x91
 2606 0619 60       		.sleb128 -32
 2607 061a 0D       		.uleb128 0xd
 2608 061b 0D050000 		.4byte	.LASF20
 2609 061f 01       		.byte	0x1
 2610 0620 D004     		.2byte	0x4d0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 71


 2611 0622 6B000000 		.4byte	0x6b
 2612 0626 02       		.uleb128 0x2
 2613 0627 91       		.byte	0x91
 2614 0628 6F       		.sleb128 -17
 2615 0629 00       		.byte	0
 2616 062a 0F       		.uleb128 0xf
 2617 062b 4F000000 		.4byte	.LASF69
 2618 062f 01       		.byte	0x1
 2619 0630 EB04     		.2byte	0x4eb
 2620 0632 76000000 		.4byte	0x76
 2621 0636 00000000 		.4byte	.LFB36
 2622 063a 20000000 		.4byte	.LFE36-.LFB36
 2623 063e 01       		.uleb128 0x1
 2624 063f 9C       		.byte	0x9c
 2625 0640 0E       		.uleb128 0xe
 2626 0641 17000000 		.4byte	.LASF70
 2627 0645 01       		.byte	0x1
 2628 0646 0405     		.2byte	0x504
 2629 0648 00000000 		.4byte	.LFB37
 2630 064c 18000000 		.4byte	.LFE37-.LFB37
 2631 0650 01       		.uleb128 0x1
 2632 0651 9C       		.byte	0x9c
 2633 0652 66060000 		.4byte	0x666
 2634 0656 0C       		.uleb128 0xc
 2635 0657 6A040000 		.4byte	.LASF71
 2636 065b 01       		.byte	0x1
 2637 065c 0405     		.2byte	0x504
 2638 065e 76000000 		.4byte	0x76
 2639 0662 02       		.uleb128 0x2
 2640 0663 91       		.byte	0x91
 2641 0664 74       		.sleb128 -12
 2642 0665 00       		.byte	0
 2643 0666 0F       		.uleb128 0xf
 2644 0667 EC010000 		.4byte	.LASF72
 2645 066b 01       		.byte	0x1
 2646 066c 1B05     		.2byte	0x51b
 2647 066e 76000000 		.4byte	0x76
 2648 0672 00000000 		.4byte	.LFB38
 2649 0676 14000000 		.4byte	.LFE38-.LFB38
 2650 067a 01       		.uleb128 0x1
 2651 067b 9C       		.byte	0x9c
 2652 067c 0F       		.uleb128 0xf
 2653 067d AB040000 		.4byte	.LASF73
 2654 0681 01       		.byte	0x1
 2655 0682 3205     		.2byte	0x532
 2656 0684 76000000 		.4byte	0x76
 2657 0688 00000000 		.4byte	.LFB39
 2658 068c 14000000 		.4byte	.LFE39-.LFB39
 2659 0690 01       		.uleb128 0x1
 2660 0691 9C       		.byte	0x9c
 2661 0692 0E       		.uleb128 0xe
 2662 0693 C9040000 		.4byte	.LASF74
 2663 0697 01       		.byte	0x1
 2664 0698 4905     		.2byte	0x549
 2665 069a 00000000 		.4byte	.LFB40
 2666 069e 18000000 		.4byte	.LFE40-.LFB40
 2667 06a2 01       		.uleb128 0x1
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 72


 2668 06a3 9C       		.byte	0x9c
 2669 06a4 B8060000 		.4byte	0x6b8
 2670 06a8 0C       		.uleb128 0xc
 2671 06a9 6A040000 		.4byte	.LASF71
 2672 06ad 01       		.byte	0x1
 2673 06ae 4905     		.2byte	0x549
 2674 06b0 76000000 		.4byte	0x76
 2675 06b4 02       		.uleb128 0x2
 2676 06b5 91       		.byte	0x91
 2677 06b6 74       		.sleb128 -12
 2678 06b7 00       		.byte	0
 2679 06b8 0E       		.uleb128 0xe
 2680 06b9 85000000 		.4byte	.LASF75
 2681 06bd 01       		.byte	0x1
 2682 06be 6005     		.2byte	0x560
 2683 06c0 00000000 		.4byte	.LFB41
 2684 06c4 18000000 		.4byte	.LFE41-.LFB41
 2685 06c8 01       		.uleb128 0x1
 2686 06c9 9C       		.byte	0x9c
 2687 06ca DE060000 		.4byte	0x6de
 2688 06ce 0C       		.uleb128 0xc
 2689 06cf 6A040000 		.4byte	.LASF71
 2690 06d3 01       		.byte	0x1
 2691 06d4 6005     		.2byte	0x560
 2692 06d6 76000000 		.4byte	0x76
 2693 06da 02       		.uleb128 0x2
 2694 06db 91       		.byte	0x91
 2695 06dc 74       		.sleb128 -12
 2696 06dd 00       		.byte	0
 2697 06de 10       		.uleb128 0x10
 2698 06df 24010000 		.4byte	.LASF79
 2699 06e3 01       		.byte	0x1
 2700 06e4 15       		.byte	0x15
 2701 06e5 6B000000 		.4byte	0x6b
 2702 06e9 05       		.uleb128 0x5
 2703 06ea 03       		.byte	0x3
 2704 06eb 00000000 		.4byte	TCPWM_initVar
 2705 06ef 00       		.byte	0
 2706              		.section	.debug_abbrev,"",%progbits
 2707              	.Ldebug_abbrev0:
 2708 0000 01       		.uleb128 0x1
 2709 0001 11       		.uleb128 0x11
 2710 0002 01       		.byte	0x1
 2711 0003 25       		.uleb128 0x25
 2712 0004 0E       		.uleb128 0xe
 2713 0005 13       		.uleb128 0x13
 2714 0006 0B       		.uleb128 0xb
 2715 0007 03       		.uleb128 0x3
 2716 0008 0E       		.uleb128 0xe
 2717 0009 1B       		.uleb128 0x1b
 2718 000a 0E       		.uleb128 0xe
 2719 000b 55       		.uleb128 0x55
 2720 000c 17       		.uleb128 0x17
 2721 000d 11       		.uleb128 0x11
 2722 000e 01       		.uleb128 0x1
 2723 000f 10       		.uleb128 0x10
 2724 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 73


 2725 0011 00       		.byte	0
 2726 0012 00       		.byte	0
 2727 0013 02       		.uleb128 0x2
 2728 0014 24       		.uleb128 0x24
 2729 0015 00       		.byte	0
 2730 0016 0B       		.uleb128 0xb
 2731 0017 0B       		.uleb128 0xb
 2732 0018 3E       		.uleb128 0x3e
 2733 0019 0B       		.uleb128 0xb
 2734 001a 03       		.uleb128 0x3
 2735 001b 0E       		.uleb128 0xe
 2736 001c 00       		.byte	0
 2737 001d 00       		.byte	0
 2738 001e 03       		.uleb128 0x3
 2739 001f 24       		.uleb128 0x24
 2740 0020 00       		.byte	0
 2741 0021 0B       		.uleb128 0xb
 2742 0022 0B       		.uleb128 0xb
 2743 0023 3E       		.uleb128 0x3e
 2744 0024 0B       		.uleb128 0xb
 2745 0025 03       		.uleb128 0x3
 2746 0026 08       		.uleb128 0x8
 2747 0027 00       		.byte	0
 2748 0028 00       		.byte	0
 2749 0029 04       		.uleb128 0x4
 2750 002a 16       		.uleb128 0x16
 2751 002b 00       		.byte	0
 2752 002c 03       		.uleb128 0x3
 2753 002d 0E       		.uleb128 0xe
 2754 002e 3A       		.uleb128 0x3a
 2755 002f 0B       		.uleb128 0xb
 2756 0030 3B       		.uleb128 0x3b
 2757 0031 0B       		.uleb128 0xb
 2758 0032 49       		.uleb128 0x49
 2759 0033 13       		.uleb128 0x13
 2760 0034 00       		.byte	0
 2761 0035 00       		.byte	0
 2762 0036 05       		.uleb128 0x5
 2763 0037 16       		.uleb128 0x16
 2764 0038 00       		.byte	0
 2765 0039 03       		.uleb128 0x3
 2766 003a 0E       		.uleb128 0xe
 2767 003b 3A       		.uleb128 0x3a
 2768 003c 0B       		.uleb128 0xb
 2769 003d 3B       		.uleb128 0x3b
 2770 003e 05       		.uleb128 0x5
 2771 003f 49       		.uleb128 0x49
 2772 0040 13       		.uleb128 0x13
 2773 0041 00       		.byte	0
 2774 0042 00       		.byte	0
 2775 0043 06       		.uleb128 0x6
 2776 0044 35       		.uleb128 0x35
 2777 0045 00       		.byte	0
 2778 0046 49       		.uleb128 0x49
 2779 0047 13       		.uleb128 0x13
 2780 0048 00       		.byte	0
 2781 0049 00       		.byte	0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 74


 2782 004a 07       		.uleb128 0x7
 2783 004b 2E       		.uleb128 0x2e
 2784 004c 00       		.byte	0
 2785 004d 3F       		.uleb128 0x3f
 2786 004e 19       		.uleb128 0x19
 2787 004f 03       		.uleb128 0x3
 2788 0050 0E       		.uleb128 0xe
 2789 0051 3A       		.uleb128 0x3a
 2790 0052 0B       		.uleb128 0xb
 2791 0053 3B       		.uleb128 0x3b
 2792 0054 0B       		.uleb128 0xb
 2793 0055 27       		.uleb128 0x27
 2794 0056 19       		.uleb128 0x19
 2795 0057 11       		.uleb128 0x11
 2796 0058 01       		.uleb128 0x1
 2797 0059 12       		.uleb128 0x12
 2798 005a 06       		.uleb128 0x6
 2799 005b 40       		.uleb128 0x40
 2800 005c 18       		.uleb128 0x18
 2801 005d 9742     		.uleb128 0x2117
 2802 005f 19       		.uleb128 0x19
 2803 0060 00       		.byte	0
 2804 0061 00       		.byte	0
 2805 0062 08       		.uleb128 0x8
 2806 0063 2E       		.uleb128 0x2e
 2807 0064 01       		.byte	0x1
 2808 0065 3F       		.uleb128 0x3f
 2809 0066 19       		.uleb128 0x19
 2810 0067 03       		.uleb128 0x3
 2811 0068 0E       		.uleb128 0xe
 2812 0069 3A       		.uleb128 0x3a
 2813 006a 0B       		.uleb128 0xb
 2814 006b 3B       		.uleb128 0x3b
 2815 006c 0B       		.uleb128 0xb
 2816 006d 27       		.uleb128 0x27
 2817 006e 19       		.uleb128 0x19
 2818 006f 11       		.uleb128 0x11
 2819 0070 01       		.uleb128 0x1
 2820 0071 12       		.uleb128 0x12
 2821 0072 06       		.uleb128 0x6
 2822 0073 40       		.uleb128 0x40
 2823 0074 18       		.uleb128 0x18
 2824 0075 9642     		.uleb128 0x2116
 2825 0077 19       		.uleb128 0x19
 2826 0078 01       		.uleb128 0x1
 2827 0079 13       		.uleb128 0x13
 2828 007a 00       		.byte	0
 2829 007b 00       		.byte	0
 2830 007c 09       		.uleb128 0x9
 2831 007d 34       		.uleb128 0x34
 2832 007e 00       		.byte	0
 2833 007f 03       		.uleb128 0x3
 2834 0080 0E       		.uleb128 0xe
 2835 0081 3A       		.uleb128 0x3a
 2836 0082 0B       		.uleb128 0xb
 2837 0083 3B       		.uleb128 0x3b
 2838 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 75


 2839 0085 49       		.uleb128 0x49
 2840 0086 13       		.uleb128 0x13
 2841 0087 02       		.uleb128 0x2
 2842 0088 18       		.uleb128 0x18
 2843 0089 00       		.byte	0
 2844 008a 00       		.byte	0
 2845 008b 0A       		.uleb128 0xa
 2846 008c 2E       		.uleb128 0x2e
 2847 008d 00       		.byte	0
 2848 008e 3F       		.uleb128 0x3f
 2849 008f 19       		.uleb128 0x19
 2850 0090 03       		.uleb128 0x3
 2851 0091 0E       		.uleb128 0xe
 2852 0092 3A       		.uleb128 0x3a
 2853 0093 0B       		.uleb128 0xb
 2854 0094 3B       		.uleb128 0x3b
 2855 0095 0B       		.uleb128 0xb
 2856 0096 27       		.uleb128 0x27
 2857 0097 19       		.uleb128 0x19
 2858 0098 11       		.uleb128 0x11
 2859 0099 01       		.uleb128 0x1
 2860 009a 12       		.uleb128 0x12
 2861 009b 06       		.uleb128 0x6
 2862 009c 40       		.uleb128 0x40
 2863 009d 18       		.uleb128 0x18
 2864 009e 9642     		.uleb128 0x2116
 2865 00a0 19       		.uleb128 0x19
 2866 00a1 00       		.byte	0
 2867 00a2 00       		.byte	0
 2868 00a3 0B       		.uleb128 0xb
 2869 00a4 2E       		.uleb128 0x2e
 2870 00a5 01       		.byte	0x1
 2871 00a6 3F       		.uleb128 0x3f
 2872 00a7 19       		.uleb128 0x19
 2873 00a8 03       		.uleb128 0x3
 2874 00a9 0E       		.uleb128 0xe
 2875 00aa 3A       		.uleb128 0x3a
 2876 00ab 0B       		.uleb128 0xb
 2877 00ac 3B       		.uleb128 0x3b
 2878 00ad 05       		.uleb128 0x5
 2879 00ae 27       		.uleb128 0x27
 2880 00af 19       		.uleb128 0x19
 2881 00b0 11       		.uleb128 0x11
 2882 00b1 01       		.uleb128 0x1
 2883 00b2 12       		.uleb128 0x12
 2884 00b3 06       		.uleb128 0x6
 2885 00b4 40       		.uleb128 0x40
 2886 00b5 18       		.uleb128 0x18
 2887 00b6 9642     		.uleb128 0x2116
 2888 00b8 19       		.uleb128 0x19
 2889 00b9 01       		.uleb128 0x1
 2890 00ba 13       		.uleb128 0x13
 2891 00bb 00       		.byte	0
 2892 00bc 00       		.byte	0
 2893 00bd 0C       		.uleb128 0xc
 2894 00be 05       		.uleb128 0x5
 2895 00bf 00       		.byte	0
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 76


 2896 00c0 03       		.uleb128 0x3
 2897 00c1 0E       		.uleb128 0xe
 2898 00c2 3A       		.uleb128 0x3a
 2899 00c3 0B       		.uleb128 0xb
 2900 00c4 3B       		.uleb128 0x3b
 2901 00c5 05       		.uleb128 0x5
 2902 00c6 49       		.uleb128 0x49
 2903 00c7 13       		.uleb128 0x13
 2904 00c8 02       		.uleb128 0x2
 2905 00c9 18       		.uleb128 0x18
 2906 00ca 00       		.byte	0
 2907 00cb 00       		.byte	0
 2908 00cc 0D       		.uleb128 0xd
 2909 00cd 34       		.uleb128 0x34
 2910 00ce 00       		.byte	0
 2911 00cf 03       		.uleb128 0x3
 2912 00d0 0E       		.uleb128 0xe
 2913 00d1 3A       		.uleb128 0x3a
 2914 00d2 0B       		.uleb128 0xb
 2915 00d3 3B       		.uleb128 0x3b
 2916 00d4 05       		.uleb128 0x5
 2917 00d5 49       		.uleb128 0x49
 2918 00d6 13       		.uleb128 0x13
 2919 00d7 02       		.uleb128 0x2
 2920 00d8 18       		.uleb128 0x18
 2921 00d9 00       		.byte	0
 2922 00da 00       		.byte	0
 2923 00db 0E       		.uleb128 0xe
 2924 00dc 2E       		.uleb128 0x2e
 2925 00dd 01       		.byte	0x1
 2926 00de 3F       		.uleb128 0x3f
 2927 00df 19       		.uleb128 0x19
 2928 00e0 03       		.uleb128 0x3
 2929 00e1 0E       		.uleb128 0xe
 2930 00e2 3A       		.uleb128 0x3a
 2931 00e3 0B       		.uleb128 0xb
 2932 00e4 3B       		.uleb128 0x3b
 2933 00e5 05       		.uleb128 0x5
 2934 00e6 27       		.uleb128 0x27
 2935 00e7 19       		.uleb128 0x19
 2936 00e8 11       		.uleb128 0x11
 2937 00e9 01       		.uleb128 0x1
 2938 00ea 12       		.uleb128 0x12
 2939 00eb 06       		.uleb128 0x6
 2940 00ec 40       		.uleb128 0x40
 2941 00ed 18       		.uleb128 0x18
 2942 00ee 9742     		.uleb128 0x2117
 2943 00f0 19       		.uleb128 0x19
 2944 00f1 01       		.uleb128 0x1
 2945 00f2 13       		.uleb128 0x13
 2946 00f3 00       		.byte	0
 2947 00f4 00       		.byte	0
 2948 00f5 0F       		.uleb128 0xf
 2949 00f6 2E       		.uleb128 0x2e
 2950 00f7 00       		.byte	0
 2951 00f8 3F       		.uleb128 0x3f
 2952 00f9 19       		.uleb128 0x19
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 77


 2953 00fa 03       		.uleb128 0x3
 2954 00fb 0E       		.uleb128 0xe
 2955 00fc 3A       		.uleb128 0x3a
 2956 00fd 0B       		.uleb128 0xb
 2957 00fe 3B       		.uleb128 0x3b
 2958 00ff 05       		.uleb128 0x5
 2959 0100 27       		.uleb128 0x27
 2960 0101 19       		.uleb128 0x19
 2961 0102 49       		.uleb128 0x49
 2962 0103 13       		.uleb128 0x13
 2963 0104 11       		.uleb128 0x11
 2964 0105 01       		.uleb128 0x1
 2965 0106 12       		.uleb128 0x12
 2966 0107 06       		.uleb128 0x6
 2967 0108 40       		.uleb128 0x40
 2968 0109 18       		.uleb128 0x18
 2969 010a 9742     		.uleb128 0x2117
 2970 010c 19       		.uleb128 0x19
 2971 010d 00       		.byte	0
 2972 010e 00       		.byte	0
 2973 010f 10       		.uleb128 0x10
 2974 0110 34       		.uleb128 0x34
 2975 0111 00       		.byte	0
 2976 0112 03       		.uleb128 0x3
 2977 0113 0E       		.uleb128 0xe
 2978 0114 3A       		.uleb128 0x3a
 2979 0115 0B       		.uleb128 0xb
 2980 0116 3B       		.uleb128 0x3b
 2981 0117 0B       		.uleb128 0xb
 2982 0118 49       		.uleb128 0x49
 2983 0119 13       		.uleb128 0x13
 2984 011a 3F       		.uleb128 0x3f
 2985 011b 19       		.uleb128 0x19
 2986 011c 02       		.uleb128 0x2
 2987 011d 18       		.uleb128 0x18
 2988 011e 00       		.byte	0
 2989 011f 00       		.byte	0
 2990 0120 00       		.byte	0
 2991              		.section	.debug_aranges,"",%progbits
 2992 0000 54010000 		.4byte	0x154
 2993 0004 0200     		.2byte	0x2
 2994 0006 00000000 		.4byte	.Ldebug_info0
 2995 000a 04       		.byte	0x4
 2996 000b 00       		.byte	0
 2997 000c 0000     		.2byte	0
 2998 000e 0000     		.2byte	0
 2999 0010 00000000 		.4byte	.LFB2
 3000 0014 08000000 		.4byte	.LFE2-.LFB2
 3001 0018 00000000 		.4byte	.LFB3
 3002 001c 30000000 		.4byte	.LFE3-.LFB3
 3003 0020 00000000 		.4byte	.LFB4
 3004 0024 24000000 		.4byte	.LFE4-.LFB4
 3005 0028 00000000 		.4byte	.LFB5
 3006 002c 30000000 		.4byte	.LFE5-.LFB5
 3007 0030 00000000 		.4byte	.LFB6
 3008 0034 48000000 		.4byte	.LFE6-.LFB6
 3009 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 78


 3010 003c 48000000 		.4byte	.LFE7-.LFB7
 3011 0040 00000000 		.4byte	.LFB8
 3012 0044 48000000 		.4byte	.LFE8-.LFB8
 3013 0048 00000000 		.4byte	.LFB9
 3014 004c 4C000000 		.4byte	.LFE9-.LFB9
 3015 0050 00000000 		.4byte	.LFB10
 3016 0054 1C000000 		.4byte	.LFE10-.LFB10
 3017 0058 00000000 		.4byte	.LFB11
 3018 005c 48000000 		.4byte	.LFE11-.LFB11
 3019 0060 00000000 		.4byte	.LFB12
 3020 0064 48000000 		.4byte	.LFE12-.LFB12
 3021 0068 00000000 		.4byte	.LFB13
 3022 006c 4C000000 		.4byte	.LFE13-.LFB13
 3023 0070 00000000 		.4byte	.LFB14
 3024 0074 48000000 		.4byte	.LFE14-.LFB14
 3025 0078 00000000 		.4byte	.LFB15
 3026 007c 1C000000 		.4byte	.LFE15-.LFB15
 3027 0080 00000000 		.4byte	.LFB16
 3028 0084 18000000 		.4byte	.LFE16-.LFB16
 3029 0088 00000000 		.4byte	.LFB17
 3030 008c 48000000 		.4byte	.LFE17-.LFB17
 3031 0090 00000000 		.4byte	.LFB18
 3032 0094 1C000000 		.4byte	.LFE18-.LFB18
 3033 0098 00000000 		.4byte	.LFB19
 3034 009c 18000000 		.4byte	.LFE19-.LFB19
 3035 00a0 00000000 		.4byte	.LFB20
 3036 00a4 48000000 		.4byte	.LFE20-.LFB20
 3037 00a8 00000000 		.4byte	.LFB21
 3038 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3039 00b0 00000000 		.4byte	.LFB22
 3040 00b4 18000000 		.4byte	.LFE22-.LFB22
 3041 00b8 00000000 		.4byte	.LFB23
 3042 00bc 48000000 		.4byte	.LFE23-.LFB23
 3043 00c0 00000000 		.4byte	.LFB24
 3044 00c4 1C000000 		.4byte	.LFE24-.LFB24
 3045 00c8 00000000 		.4byte	.LFB25
 3046 00cc 18000000 		.4byte	.LFE25-.LFB25
 3047 00d0 00000000 		.4byte	.LFB26
 3048 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3049 00d8 00000000 		.4byte	.LFB27
 3050 00dc 18000000 		.4byte	.LFE27-.LFB27
 3051 00e0 00000000 		.4byte	.LFB28
 3052 00e4 18000000 		.4byte	.LFE28-.LFB28
 3053 00e8 00000000 		.4byte	.LFB29
 3054 00ec 18000000 		.4byte	.LFE29-.LFB29
 3055 00f0 00000000 		.4byte	.LFB30
 3056 00f4 44000000 		.4byte	.LFE30-.LFB30
 3057 00f8 00000000 		.4byte	.LFB31
 3058 00fc 44000000 		.4byte	.LFE31-.LFB31
 3059 0100 00000000 		.4byte	.LFB32
 3060 0104 48000000 		.4byte	.LFE32-.LFB32
 3061 0108 00000000 		.4byte	.LFB33
 3062 010c 44000000 		.4byte	.LFE33-.LFB33
 3063 0110 00000000 		.4byte	.LFB34
 3064 0114 44000000 		.4byte	.LFE34-.LFB34
 3065 0118 00000000 		.4byte	.LFB35
 3066 011c 3C000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 79


 3067 0120 00000000 		.4byte	.LFB36
 3068 0124 20000000 		.4byte	.LFE36-.LFB36
 3069 0128 00000000 		.4byte	.LFB37
 3070 012c 18000000 		.4byte	.LFE37-.LFB37
 3071 0130 00000000 		.4byte	.LFB38
 3072 0134 14000000 		.4byte	.LFE38-.LFB38
 3073 0138 00000000 		.4byte	.LFB39
 3074 013c 14000000 		.4byte	.LFE39-.LFB39
 3075 0140 00000000 		.4byte	.LFB40
 3076 0144 18000000 		.4byte	.LFE40-.LFB40
 3077 0148 00000000 		.4byte	.LFB41
 3078 014c 18000000 		.4byte	.LFE41-.LFB41
 3079 0150 00000000 		.4byte	0
 3080 0154 00000000 		.4byte	0
 3081              		.section	.debug_ranges,"",%progbits
 3082              	.Ldebug_ranges0:
 3083 0000 00000000 		.4byte	.LFB2
 3084 0004 08000000 		.4byte	.LFE2
 3085 0008 00000000 		.4byte	.LFB3
 3086 000c 30000000 		.4byte	.LFE3
 3087 0010 00000000 		.4byte	.LFB4
 3088 0014 24000000 		.4byte	.LFE4
 3089 0018 00000000 		.4byte	.LFB5
 3090 001c 30000000 		.4byte	.LFE5
 3091 0020 00000000 		.4byte	.LFB6
 3092 0024 48000000 		.4byte	.LFE6
 3093 0028 00000000 		.4byte	.LFB7
 3094 002c 48000000 		.4byte	.LFE7
 3095 0030 00000000 		.4byte	.LFB8
 3096 0034 48000000 		.4byte	.LFE8
 3097 0038 00000000 		.4byte	.LFB9
 3098 003c 4C000000 		.4byte	.LFE9
 3099 0040 00000000 		.4byte	.LFB10
 3100 0044 1C000000 		.4byte	.LFE10
 3101 0048 00000000 		.4byte	.LFB11
 3102 004c 48000000 		.4byte	.LFE11
 3103 0050 00000000 		.4byte	.LFB12
 3104 0054 48000000 		.4byte	.LFE12
 3105 0058 00000000 		.4byte	.LFB13
 3106 005c 4C000000 		.4byte	.LFE13
 3107 0060 00000000 		.4byte	.LFB14
 3108 0064 48000000 		.4byte	.LFE14
 3109 0068 00000000 		.4byte	.LFB15
 3110 006c 1C000000 		.4byte	.LFE15
 3111 0070 00000000 		.4byte	.LFB16
 3112 0074 18000000 		.4byte	.LFE16
 3113 0078 00000000 		.4byte	.LFB17
 3114 007c 48000000 		.4byte	.LFE17
 3115 0080 00000000 		.4byte	.LFB18
 3116 0084 1C000000 		.4byte	.LFE18
 3117 0088 00000000 		.4byte	.LFB19
 3118 008c 18000000 		.4byte	.LFE19
 3119 0090 00000000 		.4byte	.LFB20
 3120 0094 48000000 		.4byte	.LFE20
 3121 0098 00000000 		.4byte	.LFB21
 3122 009c 1C000000 		.4byte	.LFE21
 3123 00a0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 80


 3124 00a4 18000000 		.4byte	.LFE22
 3125 00a8 00000000 		.4byte	.LFB23
 3126 00ac 48000000 		.4byte	.LFE23
 3127 00b0 00000000 		.4byte	.LFB24
 3128 00b4 1C000000 		.4byte	.LFE24
 3129 00b8 00000000 		.4byte	.LFB25
 3130 00bc 18000000 		.4byte	.LFE25
 3131 00c0 00000000 		.4byte	.LFB26
 3132 00c4 1C000000 		.4byte	.LFE26
 3133 00c8 00000000 		.4byte	.LFB27
 3134 00cc 18000000 		.4byte	.LFE27
 3135 00d0 00000000 		.4byte	.LFB28
 3136 00d4 18000000 		.4byte	.LFE28
 3137 00d8 00000000 		.4byte	.LFB29
 3138 00dc 18000000 		.4byte	.LFE29
 3139 00e0 00000000 		.4byte	.LFB30
 3140 00e4 44000000 		.4byte	.LFE30
 3141 00e8 00000000 		.4byte	.LFB31
 3142 00ec 44000000 		.4byte	.LFE31
 3143 00f0 00000000 		.4byte	.LFB32
 3144 00f4 48000000 		.4byte	.LFE32
 3145 00f8 00000000 		.4byte	.LFB33
 3146 00fc 44000000 		.4byte	.LFE33
 3147 0100 00000000 		.4byte	.LFB34
 3148 0104 44000000 		.4byte	.LFE34
 3149 0108 00000000 		.4byte	.LFB35
 3150 010c 3C000000 		.4byte	.LFE35
 3151 0110 00000000 		.4byte	.LFB36
 3152 0114 20000000 		.4byte	.LFE36
 3153 0118 00000000 		.4byte	.LFB37
 3154 011c 18000000 		.4byte	.LFE37
 3155 0120 00000000 		.4byte	.LFB38
 3156 0124 14000000 		.4byte	.LFE38
 3157 0128 00000000 		.4byte	.LFB39
 3158 012c 14000000 		.4byte	.LFE39
 3159 0130 00000000 		.4byte	.LFB40
 3160 0134 18000000 		.4byte	.LFE40
 3161 0138 00000000 		.4byte	.LFB41
 3162 013c 18000000 		.4byte	.LFE41
 3163 0140 00000000 		.4byte	0
 3164 0144 00000000 		.4byte	0
 3165              		.section	.debug_line,"",%progbits
 3166              	.Ldebug_line0:
 3167 0000 60030000 		.section	.debug_str,"MS",%progbits,1
 3167      02004400 
 3167      00000201 
 3167      FB0E0D00 
 3167      01010101 
 3168              	.LASF40:
 3169 0000 636F756E 		.ascii	"count\000"
 3169      7400
 3170              	.LASF27:
 3171 0006 54435057 		.ascii	"TCPWM_SetOneShot\000"
 3171      4D5F5365 
 3171      744F6E65 
 3171      53686F74 
 3171      00
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 81


 3172              	.LASF70:
 3173 0017 54435057 		.ascii	"TCPWM_SetInterruptMode\000"
 3173      4D5F5365 
 3173      74496E74 
 3173      65727275 
 3173      70744D6F 
 3174              	.LASF77:
 3175 002e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TCPWM.c\000"
 3175      6E657261 
 3175      7465645F 
 3175      536F7572 
 3175      63655C50 
 3176              	.LASF69:
 3177 004f 54435057 		.ascii	"TCPWM_ReadStatus\000"
 3177      4D5F5265 
 3177      61645374 
 3177      61747573 
 3177      00
 3178              	.LASF44:
 3179 0060 70657269 		.ascii	"period\000"
 3179      6F6400
 3180              	.LASF7:
 3181 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 3181      206C6F6E 
 3181      6720756E 
 3181      7369676E 
 3181      65642069 
 3182              	.LASF24:
 3183 007e 71644D6F 		.ascii	"qdMode\000"
 3183      646500
 3184              	.LASF75:
 3185 0085 54435057 		.ascii	"TCPWM_SetInterrupt\000"
 3185      4D5F5365 
 3185      74496E74 
 3185      65727275 
 3185      707400
 3186              	.LASF78:
 3187 0098 433A5C55 		.ascii	"C:\\Users\\mliha\\Documents\\Lab_3_Embedded\\BLE La"
 3187      73657273 
 3187      5C6D6C69 
 3187      68615C44 
 3187      6F63756D 
 3188 00c6 6220335C 		.ascii	"b 3\\BLE Lab 3.cydsn\000"
 3188      424C4520 
 3188      4C616220 
 3188      332E6379 
 3188      64736E00 
 3189              	.LASF55:
 3190 00da 54435057 		.ascii	"TCPWM_ReadCompare\000"
 3190      4D5F5265 
 3190      6164436F 
 3190      6D706172 
 3190      6500
 3191              	.LASF6:
 3192 00ec 6C6F6E67 		.ascii	"long long int\000"
 3192      206C6F6E 
 3192      6720696E 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 82


 3192      7400
 3193              	.LASF0:
 3194 00fa 7369676E 		.ascii	"signed char\000"
 3194      65642063 
 3194      68617200 
 3195              	.LASF60:
 3196 0106 54435057 		.ascii	"TCPWM_ReadCaptureBuf\000"
 3196      4D5F5265 
 3196      61644361 
 3196      70747572 
 3196      65427566 
 3197              	.LASF4:
 3198 011b 6C6F6E67 		.ascii	"long int\000"
 3198      20696E74 
 3198      00
 3199              	.LASF79:
 3200 0124 54435057 		.ascii	"TCPWM_initVar\000"
 3200      4D5F696E 
 3200      69745661 
 3200      7200
 3201              	.LASF9:
 3202 0132 75696E74 		.ascii	"uint8\000"
 3202      3800
 3203              	.LASF56:
 3204 0138 54435057 		.ascii	"TCPWM_WriteCompareBuf\000"
 3204      4D5F5772 
 3204      69746543 
 3204      6F6D7061 
 3204      72654275 
 3205              	.LASF12:
 3206 014e 646F7562 		.ascii	"double\000"
 3206      6C6500
 3207              	.LASF66:
 3208 0155 54435057 		.ascii	"TCPWM_SetCountMode\000"
 3208      4D5F5365 
 3208      74436F75 
 3208      6E744D6F 
 3208      646500
 3209              	.LASF10:
 3210 0168 75696E74 		.ascii	"uint32\000"
 3210      333200
 3211              	.LASF45:
 3212 016f 54435057 		.ascii	"TCPWM_ReadCounter\000"
 3212      4D5F5265 
 3212      6164436F 
 3212      756E7465 
 3212      7200
 3213              	.LASF46:
 3214 0181 54435057 		.ascii	"TCPWM_ReadPeriod\000"
 3214      4D5F5265 
 3214      61645065 
 3214      72696F64 
 3214      00
 3215              	.LASF62:
 3216 0192 74726967 		.ascii	"triggerMode\000"
 3216      6765724D 
 3216      6F646500 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 83


 3217              	.LASF16:
 3218 019e 54435057 		.ascii	"TCPWM_Init\000"
 3218      4D5F496E 
 3218      697400
 3219              	.LASF41:
 3220 01a9 54435057 		.ascii	"TCPWM_SetCounterMode\000"
 3220      4D5F5365 
 3220      74436F75 
 3220      6E746572 
 3220      4D6F6465 
 3221              	.LASF38:
 3222 01be 6D61736B 		.ascii	"mask\000"
 3222      00
 3223              	.LASF36:
 3224 01c3 64656164 		.ascii	"deadTime\000"
 3224      54696D65 
 3224      00
 3225              	.LASF8:
 3226 01cc 756E7369 		.ascii	"unsigned int\000"
 3226      676E6564 
 3226      20696E74 
 3226      00
 3227              	.LASF53:
 3228 01d9 54435057 		.ascii	"TCPWM_WriteCompare\000"
 3228      4D5F5772 
 3228      69746543 
 3228      6F6D7061 
 3228      726500
 3229              	.LASF72:
 3230 01ec 54435057 		.ascii	"TCPWM_GetInterruptSourceMasked\000"
 3230      4D5F4765 
 3230      74496E74 
 3230      65727275 
 3230      7074536F 
 3231              	.LASF68:
 3232 020b 636F6D6D 		.ascii	"command\000"
 3232      616E6400 
 3233              	.LASF52:
 3234 0213 54435057 		.ascii	"TCPWM_SetPeriodSwap\000"
 3234      4D5F5365 
 3234      74506572 
 3234      696F6453 
 3234      77617000 
 3235              	.LASF5:
 3236 0227 6C6F6E67 		.ascii	"long unsigned int\000"
 3236      20756E73 
 3236      69676E65 
 3236      6420696E 
 3236      7400
 3237              	.LASF30:
 3238 0239 6D6F6465 		.ascii	"modeMask\000"
 3238      4D61736B 
 3238      00
 3239              	.LASF3:
 3240 0242 73686F72 		.ascii	"short unsigned int\000"
 3240      7420756E 
 3240      7369676E 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 84


 3240      65642069 
 3240      6E7400
 3241              	.LASF18:
 3242 0255 54435057 		.ascii	"TCPWM_Enable\000"
 3242      4D5F456E 
 3242      61626C65 
 3242      00
 3243              	.LASF61:
 3244 0262 54435057 		.ascii	"TCPWM_SetCaptureMode\000"
 3244      4D5F5365 
 3244      74436170 
 3244      74757265 
 3244      4D6F6465 
 3245              	.LASF28:
 3246 0277 6F6E6553 		.ascii	"oneShotEnable\000"
 3246      686F7445 
 3246      6E61626C 
 3246      6500
 3247              	.LASF51:
 3248 0285 54435057 		.ascii	"TCPWM_ReadPeriodBuf\000"
 3248      4D5F5265 
 3248      61645065 
 3248      72696F64 
 3248      42756600 
 3249              	.LASF29:
 3250 0299 54435057 		.ascii	"TCPWM_SetPWMMode\000"
 3250      4D5F5365 
 3250      7450574D 
 3250      4D6F6465 
 3250      00
 3251              	.LASF65:
 3252 02aa 54435057 		.ascii	"TCPWM_SetStopMode\000"
 3252      4D5F5365 
 3252      7453746F 
 3252      704D6F64 
 3252      6500
 3253              	.LASF43:
 3254 02bc 54435057 		.ascii	"TCPWM_WritePeriod\000"
 3254      4D5F5772 
 3254      69746550 
 3254      6572696F 
 3254      6400
 3255              	.LASF39:
 3256 02ce 54435057 		.ascii	"TCPWM_WriteCounter\000"
 3256      4D5F5772 
 3256      69746543 
 3256      6F756E74 
 3256      657200
 3257              	.LASF14:
 3258 02e1 72656733 		.ascii	"reg32\000"
 3258      3200
 3259              	.LASF22:
 3260 02e7 54435057 		.ascii	"TCPWM_SetQDMode\000"
 3260      4D5F5365 
 3260      7451444D 
 3260      6F646500 
 3261              	.LASF33:
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 85


 3262 02f7 54435057 		.ascii	"TCPWM_SetPWMStopOnKill\000"
 3262      4D5F5365 
 3262      7450574D 
 3262      53746F70 
 3262      4F6E4B69 
 3263              	.LASF15:
 3264 030e 73697A65 		.ascii	"sizetype\000"
 3264      74797065 
 3264      00
 3265              	.LASF32:
 3266 0317 73796E63 		.ascii	"syncKillEnable\000"
 3266      4B696C6C 
 3266      456E6162 
 3266      6C6500
 3267              	.LASF63:
 3268 0326 54435057 		.ascii	"TCPWM_SetReloadMode\000"
 3268      4D5F5365 
 3268      7452656C 
 3268      6F61644D 
 3268      6F646500 
 3269              	.LASF58:
 3270 033a 54435057 		.ascii	"TCPWM_ReadCompareBuf\000"
 3270      4D5F5265 
 3270      6164436F 
 3270      6D706172 
 3270      65427566 
 3271              	.LASF47:
 3272 034f 54435057 		.ascii	"TCPWM_SetCompareSwap\000"
 3272      4D5F5365 
 3272      74436F6D 
 3272      70617265 
 3272      53776170 
 3273              	.LASF54:
 3274 0364 636F6D70 		.ascii	"compare\000"
 3274      61726500 
 3275              	.LASF11:
 3276 036c 666C6F61 		.ascii	"float\000"
 3276      7400
 3277              	.LASF26:
 3278 0372 70726573 		.ascii	"prescaler\000"
 3278      63616C65 
 3278      7200
 3279              	.LASF37:
 3280 037c 54435057 		.ascii	"TCPWM_SetPWMInvert\000"
 3280      4D5F5365 
 3280      7450574D 
 3280      496E7665 
 3280      727400
 3281              	.LASF76:
 3282 038f 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3282      4320342E 
 3282      382E3420 
 3282      32303134 
 3282      30353236 
 3283 03c2 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3283      20726576 
 3283      6973696F 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 86


 3283      6E203231 
 3283      31333538 
 3284 03f5 30202D66 		.ascii	"0 -ffunction-sections\000"
 3284      66756E63 
 3284      74696F6E 
 3284      2D736563 
 3284      74696F6E 
 3285              	.LASF64:
 3286 040b 54435057 		.ascii	"TCPWM_SetStartMode\000"
 3286      4D5F5365 
 3286      74537461 
 3286      72744D6F 
 3286      646500
 3287              	.LASF21:
 3288 041e 54435057 		.ascii	"TCPWM_SetMode\000"
 3288      4D5F5365 
 3288      744D6F64 
 3288      6500
 3289              	.LASF31:
 3290 042c 54435057 		.ascii	"TCPWM_SetPWMSyncKill\000"
 3290      4D5F5365 
 3290      7450574D 
 3290      53796E63 
 3290      4B696C6C 
 3291              	.LASF1:
 3292 0441 756E7369 		.ascii	"unsigned char\000"
 3292      676E6564 
 3292      20636861 
 3292      7200
 3293              	.LASF34:
 3294 044f 73746F70 		.ascii	"stopOnKillEnable\000"
 3294      4F6E4B69 
 3294      6C6C456E 
 3294      61626C65 
 3294      00
 3295              	.LASF2:
 3296 0460 73686F72 		.ascii	"short int\000"
 3296      7420696E 
 3296      7400
 3297              	.LASF71:
 3298 046a 696E7465 		.ascii	"interruptMask\000"
 3298      72727570 
 3298      744D6173 
 3298      6B00
 3299              	.LASF17:
 3300 0478 54435057 		.ascii	"TCPWM_Start\000"
 3300      4D5F5374 
 3300      61727400 
 3301              	.LASF67:
 3302 0484 54435057 		.ascii	"TCPWM_TriggerCommand\000"
 3302      4D5F5472 
 3302      69676765 
 3302      72436F6D 
 3302      6D616E64 
 3303              	.LASF59:
 3304 0499 54435057 		.ascii	"TCPWM_ReadCapture\000"
 3304      4D5F5265 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 87


 3304      61644361 
 3304      70747572 
 3304      6500
 3305              	.LASF73:
 3306 04ab 54435057 		.ascii	"TCPWM_GetInterruptSource\000"
 3306      4D5F4765 
 3306      74496E74 
 3306      65727275 
 3306      7074536F 
 3307              	.LASF13:
 3308 04c4 63686172 		.ascii	"char\000"
 3308      00
 3309              	.LASF74:
 3310 04c9 54435057 		.ascii	"TCPWM_ClearInterrupt\000"
 3310      4D5F436C 
 3310      65617249 
 3310      6E746572 
 3310      72757074 
 3311              	.LASF23:
 3312 04de 6D6F6465 		.ascii	"mode\000"
 3312      00
 3313              	.LASF25:
 3314 04e3 54435057 		.ascii	"TCPWM_SetPrescaler\000"
 3314      4D5F5365 
 3314      74507265 
 3314      7363616C 
 3314      657200
 3315              	.LASF42:
 3316 04f6 636F756E 		.ascii	"counterMode\000"
 3316      7465724D 
 3316      6F646500 
 3317              	.LASF57:
 3318 0502 636F6D70 		.ascii	"compareBuf\000"
 3318      61726542 
 3318      756600
 3319              	.LASF20:
 3320 050d 656E6162 		.ascii	"enableInterrupts\000"
 3320      6C65496E 
 3320      74657272 
 3320      75707473 
 3320      00
 3321              	.LASF19:
 3322 051e 54435057 		.ascii	"TCPWM_Stop\000"
 3322      4D5F5374 
 3322      6F7000
 3323              	.LASF49:
 3324 0529 54435057 		.ascii	"TCPWM_WritePeriodBuf\000"
 3324      4D5F5772 
 3324      69746550 
 3324      6572696F 
 3324      64427566 
 3325              	.LASF35:
 3326 053e 54435057 		.ascii	"TCPWM_SetPWMDeadTime\000"
 3326      4D5F5365 
 3326      7450574D 
 3326      44656164 
 3326      54696D65 
ARM GAS  C:\Users\mliha\AppData\Local\Temp\ccukRtRH.s 			page 88


 3327              	.LASF48:
 3328 0553 73776170 		.ascii	"swapEnable\000"
 3328      456E6162 
 3328      6C6500
 3329              	.LASF50:
 3330 055e 70657269 		.ascii	"periodBuf\000"
 3330      6F644275 
 3330      6600
 3331              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
